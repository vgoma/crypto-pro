{"version":3,"sources":["webpack:///1.crypto-pro.js","webpack:///./apiAsync.js","webpack:///./common.js?fc46","webpack:///./constants.js?532c","webpack:///./oids.js?7c42"],"names":["webpackJsonpcrypto_pro","module","exports","__webpack_require__","Certificate","item","this","_cert","thumbprint","subjectName","issuerName","validFrom","validTo","isValidEDSSettings","Promise","resolve","reject","cadesplugin","async_spawn","regeneratorRuntime","mark","_callee6","result","wrap","_context6","prev","next","CreateObjectAsync","sent","t0","catch","stop","getCadesCert","hash","_callee7","oStore","certs","certCnt","cert","_context7","abrupt","Open","CAPICOM_CURRENT_USER_STORE","CAPICOM_MY_STORE","CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED","message","Certificates","Count","t1","Find","CAPICOM_CERTIFICATE_FIND_SHA1_HASH","Item","Error","t2","Close","getCertInfo","tags","propName","_callee8","propInfo","_context8","cryptoCommon","parseCertInfo","getCertsList","resetCache","_certListCache","_callee9","count","_context9","CAPICOM_CERTIFICATE_FIND_TIME_VALID","CAPICOM_CERTIFICATE_FIND_EXTENDED_PROPERTY","cryptoConstants","PropId","CAPICOM_PROPID_KEY_PROV_INFO","t3","t4","Thumbprint","t5","SubjectName","t6","IssuerName","t7","ValidFromDate","t8","ValidToDate","t9","t10","t11","push","call","t12","prepareCertsInfo","getCert","then","list","foundCert","some","signData","dataBase64","signType","Boolean","_callee10","clientTime","oAttrs","oSignedData","oSigner","attrs","signature","_context10","Date","getDateObj","propset_Name","Time","AUTHENTICATED_ATTRIBUTE_SIGNING_TIME","propset_Value","propset_Certificate","AuthenticatedAttributes2","Add","propset_ContentEncoding","CADESCOM_BASE64_TO_BINARY","propset_Content","propset_Options","CAPICOM_CERTIFICATE_INCLUDE_END_ENTITY_ONLY","SignCades","CADESCOM_CADES_BES","signDataXML","dataXML","_callee11","signerXML","cnts","_context11","propset_SignatureType","SignatureType","CADESCOM_XML_SIGNATURE_TYPE_ENVELOPED","propset_SignatureMethod","GostXmlDSigUrls","XmlDsigGost3410Url","propset_DigestMethod","XmlDsigGost3411Url","Sign","getSystemInfo","sysInfo","getEnvInfo","_callee12","e","_context12","PluginVersion","cadesVersion","CSPVersion","cspVersion","Version","toString","isValidCSPVersion","version","isValidCadesVersion","prototype","isValid","_callee","_context","IsValid","Result","getProp","_callee2","_context2","exportBase64","_callee3","base64","_context3","Export","getAlgorithm","_callee4","algorithm","_context4","PublicKey","Algorithm","FriendlyName","Value","oid","getOwnerInfo","subjectNameTagsTranslations","getIssuerInfo","issuerNameTagsTranslations","getExtendedKeyUsage","_callee5","OIDS","_context5","ExtendedKeyUsage","EKUs","OID","getDecodedExtendedKeyUsage","hasExtendedKeyUsage","infoString","match","map","group","oidTitle","parts","title","descr","translated","test","oids","replace","tag","possibleNames","possible","translation","getReadableDate","date","getDate","getMonth","getFullYear","join","getHours","getMinutes","getSeconds","dateObj","bowser","msie","getVarDate","items","c","name","label","that","certOids","reduce","oidsLst","id","unshift","Array","isArray","every","oidToCheck","certOid","parsed","_detect","navigator","userAgent","info","browserName","browserVersion","mac","os","windows","linux","split","verInfo","number","i","major","minor","patch","StoreLocation","CAPICOM_MEMORY_STORE","CAPICOM_LOCAL_MACHINE_STORE","CAPICOM_ACTIVE_DIRECTORY_USER_STORE","CAPICOM_SMART_CARD_USER_STORE","StoreOpenMode","CAPICOM_STORE_OPEN_READ_ONLY","CAPICOM_STORE_OPEN_READ_WRITE","CAPICOM_STORE_OPEN_EXISTING_ONLY","CAPICOM_STORE_OPEN_INCLUDE_ARCHIVED","CertFindType","CAPICOM_CERTIFICATE_FIND_SUBJECT_NAME","CAPICOM_CERTIFICATE_FIND_ISSUER_NAME","CAPICOM_CERTIFICATE_FIND_ROOT_NAME","CAPICOM_CERTIFICATE_FIND_TEMPLATE_NAME","CAPICOM_CERTIFICATE_FIND_EXTENSION","CAPICOM_CERTIFICATE_FIND_APPLICATION_POLICY","CAPICOM_CERTIFICATE_FIND_CERTIFICATE_POLICY","CAPICOM_CERTIFICATE_FIND_TIME_NOT_YET_VALID","CAPICOM_CERTIFICATE_FIND_TIME_EXPIRED","CAPICOM_CERTIFICATE_FIND_KEY_USAGE","Check","CHECK_NONE","CHECK_TRUSTED_ROOT","CHECK_TIME_VALIDITY","CHECK_SIGNATURE_VALIDITY","CHECK_ONLINE_REVOCATION_STATUS","CHECK_OFFLINE_REVOCATION_STATUS","TRUST_IS_NOT_TIME_VALID","TRUST_IS_NOT_TIME_NESTED","TRUST_IS_REVOKED","TRUST_IS_NOT_SIGNATURE_VALID","TRUST_IS_NOT_VALID_FOR_USAGE","TRUST_IS_UNTRUSTED_ROOT","TRUST_REVOCATION_STATUS_UNKNOWN","TRUST_IS_CYCLIC","TRUST_IS_PARTIAL_CHAIN","TRUST_CTL_IS_NOT_TIME_VALID","TRUST_CTL_IS_NOT_SIGNATURE_VALID","TRUST_CTL_IS_NOT_VALID_FOR_USAGE","CAPICOM_PROPID_UNKNOWN","CAPICOM_PROPID_KEY_PROV_HANDLE","CAPICOM_PROPID_SHA1_HASH","CAPICOM_PROPID_HASH_PROP","CAPICOM_PROPID_MD5_HASH","CAPICOM_PROPID_KEY_CONTEXT","CAPICOM_PROPID_KEY_SPEC","CAPICOM_PROPID_IE30_RESERVED","CAPICOM_PROPID_PUBKEY_HASH_RESERVED","CAPICOM_PROPID_ENHKEY_USAGE","CAPICOM_PROPID_CTL_USAGE","CAPICOM_PROPID_NEXT_UPDATE_LOCATION","CAPICOM_PROPID_FRIENDLY_NAME","CAPICOM_PROPID_PVK_FILE","CAPICOM_PROPID_DESCRIPTION","CAPICOM_PROPID_ACCESS_STATE","CAPICOM_PROPID_SIGNATURE_HASH","CAPICOM_PROPID_SMART_CARD_DATA","CAPICOM_PROPID_EFS","CAPICOM_PROPID_FORTEZZA_DATA","CAPICOM_PROPID_ARCHIVED","CAPICOM_PROPID_KEY_IDENTIFIER","CAPICOM_PROPID_AUTO_ENROLL","CAPICOM_PROPID_PUBKEY_ALG_PARA","CAPICOM_PROPID_CROSS_CERT_DIST_POINTS","CAPICOM_PROPID_ISSUER_PUBLIC_KEY_MD5_HASH","CAPICOM_PROPID_SUBJECT_PUBLIC_KEY_MD5_HASH","CAPICOM_PROPID_ENROLLMENT","CAPICOM_PROPID_DATE_STAMP","CAPICOM_PROPID_ISSUER_SERIAL_NUMBER_MD5_HASH","CAPICOM_PROPID_SUBJECT_NAME_MD5_HASH","CAPICOM_PROPID_EXTENDED_ERROR_INFO","CAPICOM_PROPID_RENEWAL","CAPICOM_PROPID_ARCHIVED_KEY_HASH","CAPICOM_PROPID_FIRST_RESERVED","CAPICOM_PROPID_LAST_RESERVED","CAPICOM_PROPID_FIRST_USER","CAPICOM_PROPID_LAST_USER","CADESCOM_XML_SIGNATURE_TYPE_ENVELOPING","CADESCOM_XML_SIGNATURE_TYPE_TEMPLATE","HashAlgorithm","CADESCOM_HASH_ALGORITHM_CP_GOST_3411","CADESCOM_HASH_ALGORITHM_MD2","CADESCOM_HASH_ALGORITHM_MD4","CADESCOM_HASH_ALGORITHM_MD5","CADESCOM_HASH_ALGORITHM_SHA_256","CADESCOM_HASH_ALGORITHM_SHA_384","CADESCOM_HASH_ALGORITHM_SHA_512","CADESCOM_HASH_ALGORITHM_SHA1","CadesType","CADESCOM_CADES_DEFAULT","CADESCOM_CADES_X_LONG_TYPE_1","ContentEncoding","CADESCOM_STRING_TO_UCS2LE","StoreNames","Chain","CAPICOM_CERTIFICATE_INCLUDE_CHAIN_EXCEPT_ROOT","CAPICOM_CERTIFICATE_INCLUDE_WHOLE_CHAIN","XmlDsigGost3410UrlObsolete","XmlDsigGost3411UrlObsolete","1.2.840.113549.1.9.2","1.2.643.3.141.1.1","1.2.643.3.141.1.2","1.2.643.3.131.1.1","1.3.6.1.5.5.7.3.2","1.3.6.1.5.5.7.3.4","1.2.643.3.8.100.1","1.2.643.3.8.100.1.1","1.2.643.3.8.100.1.2","1.2.643.3.8.100.1.3","1.2.643.3.8.100.1.4","1.2.643.3.8.100.1.5","1.2.643.3.8.100.1.6","1.2.643.6.2.1.7.2","1.2.643.6.2.1.7.1","1.3.6.1.4.1.29919.21","1.2.643.3.2.100.65.13.11","1.2.643.3.8.100.1.7","1.2.643.3.8.100.1.8","1.2.643.3.8.100.1.9","1.2.643.3.8.100.1.10","1.2.643.3.8.100.1.11","1.2.643.3.8.100.1.12","1.2.643.3.8.100.1.13","1.3.6.1.4.1.24138.1.1.8.1","1.2.643.3.8.100.1.14","1.2.643.6.3","1.2.643.2.2.34.6","1.2.643.2.39.1.1","1.2.643.5.1.24.2.1.3","1.2.643.5.1.24.2.1.3.1","1.2.643.5.1.24.2.2.2","1.2.643.5.1.24.2.2.3","1.2.643.6.3.1.1","1.2.643.6.3.1.2.1","1.2.643.6.3.1.2.2","1.2.643.6.3.1.2.3","1.2.643.6.3.1.3.1","1.2.643.6.3.1.4.1","1.2.643.6.3.1.4.2","1.2.643.6.3.1.4.3","1.3.643.3.8.100.15"],"mappings":"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","file":"1.crypto-pro.js","sourcesContent":["webpackJsonpcrypto_pro([1],[\n/* 0 */,\n/* 1 */,\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar cryptoCommon = __webpack_require__(6),\n    cryptoConstants = __webpack_require__(7),\n    _certListCache;\n\nfunction Certificate(item) {\n    this._cert = item._cert;\n    this.thumbprint = item.thumbprint;\n    this.subjectName = item.subjectName;\n    this.issuerName = item.issuerName;\n    this.validFrom = item.validFrom;\n    this.validTo = item.validTo;\n}\n\n/**\n * Проверяет, валиден ли сертификат\n * */\nCertificate.prototype.isValid = function isValid() {\n    var cert = this._cert;\n\n    return new Promise(function (resolve, reject) {\n        cadesplugin.async_spawn(regeneratorRuntime.mark(function _callee() {\n            var result;\n            return regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                    switch (_context.prev = _context.next) {\n                        case 0:\n                            _context.prev = 0;\n                            _context.next = 3;\n                            return cert.IsValid();\n\n                        case 3:\n                            result = _context.sent;\n                            _context.next = 6;\n                            return result.Result;\n\n                        case 6:\n                            result = _context.sent;\n                            _context.next = 13;\n                            break;\n\n                        case 9:\n                            _context.prev = 9;\n                            _context.t0 = _context['catch'](0);\n\n                            reject('Ошибка при проверке сертификата: ', _context.t0.message);\n                            return _context.abrupt('return');\n\n                        case 13:\n\n                            resolve(result);\n\n                        case 14:\n                        case 'end':\n                            return _context.stop();\n                    }\n                }\n            }, _callee, this, [[0, 9]]);\n        }));\n    });\n};\n\n/**\n * Достает указанное свойство у сертификата\n * */\nCertificate.prototype.getProp = function (propName) {\n    var cert = this._cert;\n\n    return new Promise(function (resolve, reject) {\n        cadesplugin.async_spawn(regeneratorRuntime.mark(function _callee2() {\n            var result;\n            return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                    switch (_context2.prev = _context2.next) {\n                        case 0:\n                            _context2.prev = 0;\n                            _context2.next = 3;\n                            return cert[propName];\n\n                        case 3:\n                            result = _context2.sent;\n                            _context2.next = 10;\n                            break;\n\n                        case 6:\n                            _context2.prev = 6;\n                            _context2.t0 = _context2['catch'](0);\n\n                            reject('Ошибка при обращении к свойству сертификата: ', _context2.t0.message);\n                            return _context2.abrupt('return');\n\n                        case 10:\n\n                            resolve(result);\n\n                        case 11:\n                        case 'end':\n                            return _context2.stop();\n                    }\n                }\n            }, _callee2, this, [[0, 6]]);\n        }));\n    });\n};\n\n/**\n * Экспорт base64 представления сертификата пользователя\n * */\nCertificate.prototype.exportBase64 = function exportBase64() {\n    var cert = this._cert;\n\n    return new Promise(function (resolve, reject) {\n        cadesplugin.async_spawn(regeneratorRuntime.mark(function _callee3() {\n            var base64;\n            return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                while (1) {\n                    switch (_context3.prev = _context3.next) {\n                        case 0:\n                            _context3.prev = 0;\n                            _context3.next = 3;\n                            return cert.Export(0);\n\n                        case 3:\n                            base64 = _context3.sent;\n                            _context3.next = 10;\n                            break;\n\n                        case 6:\n                            _context3.prev = 6;\n                            _context3.t0 = _context3['catch'](0);\n\n                            reject('Ошибка при экспорте сертификата: ', _context3.t0.message);\n                            return _context3.abrupt('return');\n\n                        case 10:\n\n                            resolve(base64);\n\n                        case 11:\n                        case 'end':\n                            return _context3.stop();\n                    }\n                }\n            }, _callee3, this, [[0, 6]]);\n        }));\n    });\n};\n\n/**\n * Возвращает информацию об алгоритме\n * */\nCertificate.prototype.getAlgorithm = function getAlgorithm() {\n    var cert = this._cert;\n\n    return new Promise(function (resolve, reject) {\n        cadesplugin.async_spawn(regeneratorRuntime.mark(function _callee4() {\n            var result, algorithm;\n            return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                while (1) {\n                    switch (_context4.prev = _context4.next) {\n                        case 0:\n                            result = {};\n                            _context4.prev = 1;\n                            _context4.next = 4;\n                            return cert.PublicKey();\n\n                        case 4:\n                            algorithm = _context4.sent;\n                            _context4.next = 7;\n                            return algorithm.Algorithm;\n\n                        case 7:\n                            algorithm = _context4.sent;\n                            _context4.next = 10;\n                            return algorithm.FriendlyName;\n\n                        case 10:\n                            result.algorithm = _context4.sent;\n                            _context4.next = 13;\n                            return algorithm.Value;\n\n                        case 13:\n                            result.oid = _context4.sent;\n                            _context4.next = 20;\n                            break;\n\n                        case 16:\n                            _context4.prev = 16;\n                            _context4.t0 = _context4['catch'](1);\n\n                            reject('Ошибка при получении алгоритма: ', _context4.t0.message);\n                            return _context4.abrupt('return');\n\n                        case 20:\n\n                            resolve(result);\n\n                        case 21:\n                        case 'end':\n                            return _context4.stop();\n                    }\n                }\n            }, _callee4, this, [[1, 16]]);\n        }));\n    });\n};\n\n/**\n * Разбирает SubjectName сертификата по тэгам\n * */\nCertificate.prototype.getOwnerInfo = function getOwnerInfo() {\n    return getCertInfo.call(this, cryptoCommon.subjectNameTagsTranslations, 'SubjectName');\n};\n\n/**\n * Разбирает IssuerName сертификата по тэгам\n * */\nCertificate.prototype.getIssuerInfo = function getIssuerInfo() {\n    return getCertInfo.call(this, cryptoCommon.issuerNameTagsTranslations, 'IssuerName');\n};\n\n/**\n * Получение OID сертификата\n *\n * @returns {Array} Возвращает массив OID (улучшенного ключа)\n * */\nCertificate.prototype.getExtendedKeyUsage = function getExtendedKeyUsage() {\n    var cert = this._cert;\n\n    return new Promise(function (resolve, reject) {\n        cadesplugin.async_spawn(regeneratorRuntime.mark(function _callee5() {\n            var OIDS, count, item;\n            return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                while (1) {\n                    switch (_context5.prev = _context5.next) {\n                        case 0:\n                            OIDS = [];\n                            _context5.prev = 1;\n                            _context5.next = 4;\n                            return cert.ExtendedKeyUsage();\n\n                        case 4:\n                            count = _context5.sent;\n                            _context5.next = 7;\n                            return count.EKUs;\n\n                        case 7:\n                            count = _context5.sent;\n                            _context5.next = 10;\n                            return count.Count;\n\n                        case 10:\n                            count = _context5.sent;\n\n                            if (!(count > 0)) {\n                                _context5.next = 29;\n                                break;\n                            }\n\n                        case 12:\n                            if (!(count > 0)) {\n                                _context5.next = 29;\n                                break;\n                            }\n\n                            _context5.next = 15;\n                            return cert.ExtendedKeyUsage();\n\n                        case 15:\n                            item = _context5.sent;\n                            _context5.next = 18;\n                            return item.EKUs;\n\n                        case 18:\n                            item = _context5.sent;\n                            _context5.next = 21;\n                            return item.Item(count);\n\n                        case 21:\n                            item = _context5.sent;\n                            _context5.next = 24;\n                            return item.OID;\n\n                        case 24:\n                            item = _context5.sent;\n\n\n                            OIDS.push(item);\n\n                            count--;\n                            _context5.next = 12;\n                            break;\n\n                        case 29:\n                            _context5.next = 35;\n                            break;\n\n                        case 31:\n                            _context5.prev = 31;\n                            _context5.t0 = _context5['catch'](1);\n\n                            reject('Ошибка при получении ОИД\\'ов: ', _context5.t0.message);\n                            return _context5.abrupt('return');\n\n                        case 35:\n\n                            resolve(OIDS);\n\n                        case 36:\n                        case 'end':\n                            return _context5.stop();\n                    }\n                }\n            }, _callee5, this, [[1, 31]]);\n        }));\n    });\n};\n\nCertificate.prototype.getDecodedExtendedKeyUsage = cryptoCommon.getDecodedExtendedKeyUsage;\n\nCertificate.prototype.hasExtendedKeyUsage = cryptoCommon.hasExtendedKeyUsage;\n\n/**\n * Проверяет корректность настроек ЭП на машине\n * */\nfunction isValidEDSSettings() {\n    return new Promise(function (resolve, reject) {\n        cadesplugin.async_spawn(regeneratorRuntime.mark(function _callee6() {\n            var result;\n            return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                while (1) {\n                    switch (_context6.prev = _context6.next) {\n                        case 0:\n                            _context6.prev = 0;\n                            _context6.next = 3;\n                            return cadesplugin.CreateObjectAsync('CAdESCOM.About');\n\n                        case 3:\n                            result = _context6.sent;\n                            _context6.next = 9;\n                            break;\n\n                        case 6:\n                            _context6.prev = 6;\n                            _context6.t0 = _context6['catch'](0);\n\n                            reject('Настройки ЭП на данной машине не верны');\n\n                        case 9:\n\n                            resolve();\n\n                        case 10:\n                        case 'end':\n                            return _context6.stop();\n                    }\n                }\n            }, _callee6, this, [[0, 6]]);\n        }));\n    });\n}\n\n/**\n * Получить сертификат в формате cades по хэшу\n * */\nfunction getCadesCert(hash) {\n    return new Promise(function (resolve, reject) {\n        cadesplugin.async_spawn(regeneratorRuntime.mark(function _callee7() {\n            var oStore, certs, certCnt, cert;\n            return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                while (1) {\n                    switch (_context7.prev = _context7.next) {\n                        case 0:\n                            _context7.next = 2;\n                            return cadesplugin.CreateObjectAsync('CAdESCOM.Store');\n\n                        case 2:\n                            oStore = _context7.sent;\n\n                            if (oStore) {\n                                _context7.next = 6;\n                                break;\n                            }\n\n                            reject('Не удалось получить доступ к хранилищу сертификатов');\n                            return _context7.abrupt('return');\n\n                        case 6:\n                            _context7.prev = 6;\n                            _context7.next = 9;\n                            return oStore.Open(cadesplugin.CAPICOM_CURRENT_USER_STORE, cadesplugin.CAPICOM_MY_STORE, cadesplugin.CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED);\n\n                        case 9:\n                            _context7.next = 15;\n                            break;\n\n                        case 11:\n                            _context7.prev = 11;\n                            _context7.t0 = _context7['catch'](6);\n\n                            reject('Ошибка при открытии хранилища: ' + _context7.t0.message);\n                            return _context7.abrupt('return');\n\n                        case 15:\n                            _context7.prev = 15;\n                            _context7.next = 18;\n                            return oStore.Certificates;\n\n                        case 18:\n                            certs = _context7.sent;\n                            _context7.next = 21;\n                            return certs.Count;\n\n                        case 21:\n                            certCnt = _context7.sent;\n                            _context7.next = 28;\n                            break;\n\n                        case 24:\n                            _context7.prev = 24;\n                            _context7.t1 = _context7['catch'](15);\n\n                            reject('Ошибка получения списка сертификатов: ' + _context7.t1.message);\n                            return _context7.abrupt('return');\n\n                        case 28:\n                            if (certCnt) {\n                                _context7.next = 31;\n                                break;\n                            }\n\n                            reject('Нет доступных сертификатов');\n                            return _context7.abrupt('return');\n\n                        case 31:\n                            _context7.prev = 31;\n                            _context7.next = 34;\n                            return certs.Find(cadesplugin.CAPICOM_CERTIFICATE_FIND_SHA1_HASH, hash);\n\n                        case 34:\n                            certs = _context7.sent;\n\n                            if (!certs.Count) {\n                                _context7.next = 41;\n                                break;\n                            }\n\n                            _context7.next = 38;\n                            return certs.Item(1);\n\n                        case 38:\n                            cert = _context7.sent;\n                            _context7.next = 42;\n                            break;\n\n                        case 41:\n                            throw new Error(hash);\n\n                        case 42:\n                            _context7.next = 48;\n                            break;\n\n                        case 44:\n                            _context7.prev = 44;\n                            _context7.t2 = _context7['catch'](31);\n\n                            reject('Не удалось получить сертификат по хэшу: ' + _context7.t2.message);\n                            return _context7.abrupt('return');\n\n                        case 48:\n\n                            oStore.Close();\n\n                            resolve(cert);\n\n                        case 50:\n                        case 'end':\n                            return _context7.stop();\n                    }\n                }\n            }, _callee7, this, [[6, 11], [15, 24], [31, 44]]);\n        }));\n    });\n}\n\n/**\n * Разбирает информацию сертификата по тэгам\n * */\nfunction getCertInfo(tags, propName) {\n    var cert = this._cert;\n\n    return new Promise(function (resolve, reject) {\n        cadesplugin.async_spawn(regeneratorRuntime.mark(function _callee8() {\n            var propInfo;\n            return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                while (1) {\n                    switch (_context8.prev = _context8.next) {\n                        case 0:\n                            _context8.prev = 0;\n                            _context8.next = 3;\n                            return cert[propName];\n\n                        case 3:\n                            propInfo = _context8.sent;\n                            _context8.next = 10;\n                            break;\n\n                        case 6:\n                            _context8.prev = 6;\n                            _context8.t0 = _context8['catch'](0);\n\n                            reject('Ошибка при извлечении данных из сертификата: ', _context8.t0.message);\n                            return _context8.abrupt('return');\n\n                        case 10:\n\n                            resolve(cryptoCommon.parseCertInfo(tags, propInfo));\n\n                        case 11:\n                        case 'end':\n                            return _context8.stop();\n                    }\n                }\n            }, _callee8, this, [[0, 6]]);\n        }));\n    });\n}\n\n/**\n * Возвращает список сертификатов, доступных в системе\n *\n * @param {Boolean} [resetCache=false] -- нужно ли сбросить кэш списка сертификатов\n * @returns {Promise} -- со списком сертификатов {Array}\n * */\nfunction getCertsList(resetCache) {\n    return new Promise(function (resolve, reject) {\n        if (!resetCache && _certListCache) {\n            resolve(_certListCache);\n            return;\n        }\n\n        cadesplugin.async_spawn(regeneratorRuntime.mark(function _callee9() {\n            var oStore, result, certs, count, item;\n            return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                while (1) {\n                    switch (_context9.prev = _context9.next) {\n                        case 0:\n                            _context9.next = 2;\n                            return cadesplugin.CreateObjectAsync('CAdESCOM.Store');\n\n                        case 2:\n                            oStore = _context9.sent;\n                            result = [];\n                            _context9.prev = 4;\n                            _context9.next = 7;\n                            return oStore.Open(cadesplugin.CAPICOM_CURRENT_USER_STORE, cadesplugin.CAPICOM_MY_STORE, cadesplugin.CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED);\n\n                        case 7:\n                            _context9.next = 13;\n                            break;\n\n                        case 9:\n                            _context9.prev = 9;\n                            _context9.t0 = _context9['catch'](4);\n\n                            reject('Ошибка при открытии хранилища: ' + _context9.t0.message);\n                            return _context9.abrupt('return');\n\n                        case 13:\n                            _context9.prev = 13;\n                            _context9.next = 16;\n                            return oStore.Certificates;\n\n                        case 16:\n                            certs = _context9.sent;\n\n                            if (!certs) {\n                                _context9.next = 27;\n                                break;\n                            }\n\n                            _context9.next = 20;\n                            return certs.Find(cadesplugin.CAPICOM_CERTIFICATE_FIND_TIME_VALID);\n\n                        case 20:\n                            certs = _context9.sent;\n                            _context9.next = 23;\n                            return certs.Find(cadesplugin.CAPICOM_CERTIFICATE_FIND_EXTENDED_PROPERTY, cryptoConstants.PropId.CAPICOM_PROPID_KEY_PROV_INFO);\n\n                        case 23:\n                            certs = _context9.sent;\n                            _context9.next = 26;\n                            return certs.Count;\n\n                        case 26:\n                            count = _context9.sent;\n\n                        case 27:\n                            _context9.next = 33;\n                            break;\n\n                        case 29:\n                            _context9.prev = 29;\n                            _context9.t1 = _context9['catch'](13);\n\n                            reject('Ошибка получения списка сертификатов: ' + _context9.t1.message);\n                            return _context9.abrupt('return');\n\n                        case 33:\n                            if (count) {\n                                _context9.next = 36;\n                                break;\n                            }\n\n                            reject('Нет доступных сертификатов');\n                            return _context9.abrupt('return');\n\n                        case 36:\n                            _context9.prev = 36;\n\n                        case 37:\n                            if (!count) {\n                                _context9.next = 67;\n                                break;\n                            }\n\n                            _context9.next = 40;\n                            return certs.Item(count);\n\n                        case 40:\n                            item = _context9.sent;\n                            _context9.t2 = result;\n                            _context9.t3 = Certificate;\n                            _context9.next = 45;\n                            return item;\n\n                        case 45:\n                            _context9.t4 = _context9.sent;\n                            _context9.next = 48;\n                            return item.Thumbprint;\n\n                        case 48:\n                            _context9.t5 = _context9.sent;\n                            _context9.next = 51;\n                            return item.SubjectName;\n\n                        case 51:\n                            _context9.t6 = _context9.sent;\n                            _context9.next = 54;\n                            return item.IssuerName;\n\n                        case 54:\n                            _context9.t7 = _context9.sent;\n                            _context9.next = 57;\n                            return item.ValidFromDate;\n\n                        case 57:\n                            _context9.t8 = _context9.sent;\n                            _context9.next = 60;\n                            return item.ValidToDate;\n\n                        case 60:\n                            _context9.t9 = _context9.sent;\n                            _context9.t10 = {\n                                _cert: _context9.t4,\n                                thumbprint: _context9.t5,\n                                subjectName: _context9.t6,\n                                issuerName: _context9.t7,\n                                validFrom: _context9.t8,\n                                validTo: _context9.t9\n                            };\n                            _context9.t11 = new _context9.t3(_context9.t10);\n\n                            _context9.t2.push.call(_context9.t2, _context9.t11);\n\n                            count--;\n                            _context9.next = 37;\n                            break;\n\n                        case 67:\n                            _context9.next = 73;\n                            break;\n\n                        case 69:\n                            _context9.prev = 69;\n                            _context9.t12 = _context9['catch'](36);\n\n                            reject('Ошибка обработки сертификатов: ' + _context9.t12.message);\n                            return _context9.abrupt('return');\n\n                        case 73:\n\n                            oStore.Close();\n\n                            _certListCache = cryptoCommon.prepareCertsInfo(result);\n\n                            resolve(_certListCache);\n\n                        case 76:\n                        case 'end':\n                            return _context9.stop();\n                    }\n                }\n            }, _callee9, this, [[4, 9], [13, 29], [36, 69]]);\n        }));\n    });\n}\n\n/**\n * Получить сертификат по хэшу\n * */\nfunction getCert(hash) {\n    return new Promise(function (resolve, reject) {\n        if (!hash) {\n            reject('Хэш не указан');\n            return;\n        }\n\n        getCertsList().then(function (list) {\n            var foundCert;\n\n            list.some(function (cert) {\n                if (hash === cert.thumbprint) {\n                    foundCert = cert;\n                    return true;\n                }\n            });\n\n            if (foundCert) {\n                resolve(foundCert);\n            } else {\n                reject('Сертификат с хэшем: \"' + hash + '\" не найден');\n            }\n        }, reject);\n    });\n}\n\n/**\n * Создает подпись base64 строки по hash'у сертификата\n *\n * @param {String} hash -- fingerprint (thumbprint) сертификата\n * @param {String} dataBase64 -- строковые данные в формате base64\n * @param {Boolean} signType -- тип подписи открепленная (true) / присоединенная (false) (default: true)\n * @returns {Promise} -- обещание, которое зарезолвится с данными о подписи {String}\n * */\nfunction signData(hash, dataBase64, signType) {\n    signType = typeof signType === 'undefined' ? true : Boolean(signType);\n\n    return new Promise(function (resolve, reject) {\n        getCadesCert(hash).then(function (cert) {\n            cadesplugin.async_spawn(regeneratorRuntime.mark(function _callee10() {\n                var clientTime, oAttrs, oSignedData, oSigner, attrs, signature;\n                return regeneratorRuntime.wrap(function _callee10$(_context10) {\n                    while (1) {\n                        switch (_context10.prev = _context10.next) {\n                            case 0:\n                                clientTime = new Date();\n                                _context10.next = 3;\n                                return cadesplugin.CreateObjectAsync('CADESCOM.CPAttribute');\n\n                            case 3:\n                                oAttrs = _context10.sent;\n                                _context10.next = 6;\n                                return cadesplugin.CreateObjectAsync('CAdESCOM.CadesSignedData');\n\n                            case 6:\n                                oSignedData = _context10.sent;\n                                _context10.next = 9;\n                                return cadesplugin.CreateObjectAsync('CAdESCOM.CPSigner');\n\n                            case 9:\n                                oSigner = _context10.sent;\n\n\n                                clientTime = cryptoCommon.getDateObj(clientTime);\n\n                                _context10.prev = 11;\n                                _context10.next = 14;\n                                return oAttrs.propset_Name(cryptoConstants.Time.AUTHENTICATED_ATTRIBUTE_SIGNING_TIME);\n\n                            case 14:\n                                _context10.next = 16;\n                                return oAttrs.propset_Value(clientTime);\n\n                            case 16:\n                                _context10.next = 22;\n                                break;\n\n                            case 18:\n                                _context10.prev = 18;\n                                _context10.t0 = _context10['catch'](11);\n\n                                reject('Ошибка при установке данных подписи: ' + _context10.t0.message);\n                                return _context10.abrupt('return');\n\n                            case 22:\n                                _context10.prev = 22;\n                                _context10.next = 25;\n                                return oSigner.propset_Certificate(cert);\n\n                            case 25:\n                                _context10.next = 27;\n                                return oSigner.AuthenticatedAttributes2;\n\n                            case 27:\n                                attrs = _context10.sent;\n                                _context10.next = 30;\n                                return attrs.Add(oAttrs);\n\n                            case 30:\n                                _context10.next = 32;\n                                return oSignedData.propset_ContentEncoding(cadesplugin.CADESCOM_BASE64_TO_BINARY);\n\n                            case 32:\n                                _context10.next = 34;\n                                return oSignedData.propset_Content(dataBase64);\n\n                            case 34:\n                                _context10.next = 36;\n                                return oSigner.propset_Options(cadesplugin.CAPICOM_CERTIFICATE_INCLUDE_END_ENTITY_ONLY);\n\n                            case 36:\n                                _context10.next = 42;\n                                break;\n\n                            case 38:\n                                _context10.prev = 38;\n                                _context10.t1 = _context10['catch'](22);\n\n                                reject('Не удалось установить настройки для подписи: ' + _context10.t1.message);\n                                return _context10.abrupt('return');\n\n                            case 42:\n                                _context10.prev = 42;\n                                _context10.next = 45;\n                                return oSignedData.SignCades(oSigner, cadesplugin.CADESCOM_CADES_BES, signType);\n\n                            case 45:\n                                signature = _context10.sent;\n                                _context10.next = 52;\n                                break;\n\n                            case 48:\n                                _context10.prev = 48;\n                                _context10.t2 = _context10['catch'](42);\n\n                                reject('Не удалось создать подпись: ' + _context10.t2.message);\n                                return _context10.abrupt('return');\n\n                            case 52:\n\n                                resolve(signature);\n\n                            case 53:\n                            case 'end':\n                                return _context10.stop();\n                        }\n                    }\n                }, _callee10, this, [[11, 18], [22, 38], [42, 48]]);\n            }));\n        }, reject);\n    });\n}\n\n/**\n * Создает подпись XML строки по hash'у сертификата\n *\n * @param {String} hash -- fingerprint (thumbprint) сертификата\n * @param {String} dataXML -- данные в формате XML\n * @returns {Promise} -- обещание, которое зарезолвится с данными о подписи {String}\n * */\nfunction signDataXML(hash, dataXML) {\n    return new Promise(function (resolve, reject) {\n        getCadesCert(hash).then(function (cert) {\n            cadesplugin.async_spawn(regeneratorRuntime.mark(function _callee11() {\n                var oSigner, signerXML, cnts, signature;\n                return regeneratorRuntime.wrap(function _callee11$(_context11) {\n                    while (1) {\n                        switch (_context11.prev = _context11.next) {\n                            case 0:\n                                _context11.next = 2;\n                                return cadesplugin.CreateObjectAsync('CAdESCOM.CPSigner');\n\n                            case 2:\n                                oSigner = _context11.sent;\n                                _context11.next = 5;\n                                return cadesplugin.CreateObjectAsync('CAdESCOM.SignedXML');\n\n                            case 5:\n                                signerXML = _context11.sent;\n                                cnts = cryptoConstants;\n                                _context11.prev = 7;\n                                _context11.next = 10;\n                                return oSigner.propset_Certificate(cert);\n\n                            case 10:\n                                _context11.next = 12;\n                                return signerXML.propset_Content(dataXML);\n\n                            case 12:\n                                _context11.next = 14;\n                                return signerXML.propset_SignatureType(cnts.SignatureType.CADESCOM_XML_SIGNATURE_TYPE_ENVELOPED);\n\n                            case 14:\n                                _context11.next = 16;\n                                return signerXML.propset_SignatureMethod(cnts.GostXmlDSigUrls.XmlDsigGost3410Url);\n\n                            case 16:\n                                _context11.next = 18;\n                                return signerXML.propset_DigestMethod(cnts.GostXmlDSigUrls.XmlDsigGost3411Url);\n\n                            case 18:\n                                _context11.next = 24;\n                                break;\n\n                            case 20:\n                                _context11.prev = 20;\n                                _context11.t0 = _context11['catch'](7);\n\n                                reject('Не удалось установить настройки для подписи: ' + _context11.t0.message);\n                                return _context11.abrupt('return');\n\n                            case 24:\n                                _context11.prev = 24;\n                                _context11.next = 27;\n                                return signerXML.Sign(oSigner);\n\n                            case 27:\n                                signature = _context11.sent;\n                                _context11.next = 34;\n                                break;\n\n                            case 30:\n                                _context11.prev = 30;\n                                _context11.t1 = _context11['catch'](24);\n\n                                reject('Не удалось создать подпись: ' + _context11.t1.message);\n                                return _context11.abrupt('return');\n\n                            case 34:\n\n                                resolve(signature);\n\n                            case 35:\n                            case 'end':\n                                return _context11.stop();\n                        }\n                    }\n                }, _callee11, this, [[7, 20], [24, 30]]);\n            }));\n        }, reject);\n    });\n}\n\n/**\n * Возвращает информацию о версии CSP и плагина\n * */\nfunction getSystemInfo() {\n    var sysInfo = cryptoCommon.getEnvInfo();\n\n    return new Promise(function (resolve, reject) {\n        cadesplugin.async_spawn(regeneratorRuntime.mark(function _callee12() {\n            var e;\n            return regeneratorRuntime.wrap(function _callee12$(_context12) {\n                while (1) {\n                    switch (_context12.prev = _context12.next) {\n                        case 0:\n                            _context12.prev = 0;\n                            _context12.next = 3;\n                            return cadesplugin.CreateObjectAsync('CAdESCOM.About');\n\n                        case 3:\n                            e = _context12.sent;\n                            _context12.next = 6;\n                            return e.PluginVersion;\n\n                        case 6:\n                            sysInfo.cadesVersion = _context12.sent;\n                            _context12.next = 9;\n                            return e.CSPVersion();\n\n                        case 9:\n                            sysInfo.cspVersion = _context12.sent;\n\n                            if (sysInfo.cadesVersion) {\n                                _context12.next = 14;\n                                break;\n                            }\n\n                            _context12.next = 13;\n                            return e.Version;\n\n                        case 13:\n                            sysInfo.cadesVersion = _context12.sent;\n\n                        case 14:\n                            _context12.next = 16;\n                            return sysInfo.cadesVersion.toString();\n\n                        case 16:\n                            sysInfo.cadesVersion = _context12.sent;\n                            _context12.next = 19;\n                            return sysInfo.cspVersion.toString();\n\n                        case 19:\n                            sysInfo.cspVersion = _context12.sent;\n\n\n                            resolve(sysInfo);\n                            _context12.next = 26;\n                            break;\n\n                        case 23:\n                            _context12.prev = 23;\n                            _context12.t0 = _context12['catch'](0);\n\n                            reject('Ошибка при получении информации о системе: ', _context12.t0.message);\n\n                        case 26:\n                        case 'end':\n                            return _context12.stop();\n                    }\n                }\n            }, _callee12, this, [[0, 23]]);\n        }));\n    });\n}\n\n/**\n * Promise обертка для синхронного вызова проверки версии CSP\n * */\nfunction isValidCSPVersion(version) {\n    return new Promise(function (resolve) {\n        resolve(cryptoCommon.isValidCSPVersion(version));\n    });\n}\n\n/**\n * Promise обертка для синхронного вызова проверки версии плагина\n * */\nfunction isValidCadesVersion(version) {\n    return new Promise(function (resolve) {\n        resolve(cryptoCommon.isValidCadesVersion(version));\n    });\n}\n\nmodule.exports = {\n    isValidEDSSettings: isValidEDSSettings,\n    getCertsList: getCertsList,\n    getCert: getCert,\n    signData: signData,\n    signDataXML: signDataXML,\n    getSystemInfo: getSystemInfo,\n    isValidCSPVersion: isValidCSPVersion,\n    isValidCadesVersion: isValidCadesVersion\n};\n\n/***/ }),\n/* 3 */,\n/* 4 */,\n/* 5 */,\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar bowser = __webpack_require__(0);\nvar oids = __webpack_require__(8);\n\nvar subjectNameTagsTranslations = [{ possibleNames: ['UnstructuredName'], translation: 'Неструктурированное имя' }, { possibleNames: ['CN'], translation: 'Владелец' }, { possibleNames: ['SN'], translation: 'Фамилия' }, { possibleNames: ['G'], translation: 'Имя Отчество' }, { possibleNames: ['C'], translation: 'Страна' }, { possibleNames: ['S'], translation: 'Регион' }, { possibleNames: ['STREET'], translation: 'Адрес' }, { possibleNames: ['O'], translation: 'Компания' }, { possibleNames: ['OU'], translation: 'Отдел/подразделение' }, { possibleNames: ['T'], translation: 'Должность' }, { possibleNames: ['ОГРН', 'OGRN'], translation: 'ОГРН' }, { possibleNames: ['ОГРНИП', 'OGRNIP'], translation: 'ОГРНИП' }, { possibleNames: ['СНИЛС', 'SNILS'], translation: 'СНИЛС' }, { possibleNames: ['ИНН', 'INN'], translation: 'ИНН' }, { possibleNames: ['E'], translation: 'Email' }, { possibleNames: ['L'], translation: 'Город' }],\n    issuerNameTagsTranslations = [{ possibleNames: ['UnstructuredName'], translation: 'Неструктурированное имя' }, { possibleNames: ['CN'], translation: 'Удостоверяющий центр' }, { possibleNames: ['S'], translation: 'Регион' }, { possibleNames: ['C'], translation: 'Страна' }, { possibleNames: ['STREET'], translation: 'Адрес' }, { possibleNames: ['O'], translation: 'Компания' }, { possibleNames: ['OU'], translation: 'Тип' }, { possibleNames: ['T'], translation: 'Должность' }, { possibleNames: ['ОГРН', 'OGRN'], translation: 'ОГРН' }, { possibleNames: ['ОГРНИП', 'OGRNIP'], translation: 'ОГРНИП' }, { possibleNames: ['СНИЛС', 'SNILS'], translation: 'СНИЛС' }, { possibleNames: ['ИНН', 'INN'], translation: 'ИНН' }, { possibleNames: ['E'], translation: 'Email' }, { possibleNames: ['L'], translation: 'Город' }];\n\n/**\n * Парсит информацию из строки с информацией о сертификате\n * */\nfunction parseCertInfo(tags, infoString) {\n    /**\n     * Пример входной строки:\n     *\n      T=Генеральный директор, UnstructuredName=\"INN=7811514257/KPP=781101001/OGRN=1127847087884\",\n     STREET=\"Крыленко, д.3, лит.Б\", CN=Король Анатолий Евгеньевич, G=Анатолий Евгеньевич, SN=Король,\n     OU=Администрация, O=\"ООО \"\"Аксиома\"\"\", L=Санкт-Петербург, S=78 г. Санкт-Петербург, C=RU, E=korol@sferasro.ru,\n     INN=007811514257, OGRN=1127847087884, SNILS=11617693460\n      * */\n    var result = infoString.match(/([а-яА-Яa-zA-Z0-9\\.]+)=(?:(\"[^\"]+?\")|(.+?))(?:,|$)/g);\n\n    if (result) {\n        result = result.map(function (group) {\n            /**\n             * Пример входной строки:\n             *\n              UnstructuredName=\"INN=7811514257/KPP=781101001/OGRN=1127847087884\",\n              * */\n            var parts = group.match(/^([а-яА-Яa-zA-Z0-9\\.]+)=(.+?),?$/),\n                title = parts && parts[1],\n                descr = parts && parts[2],\n                translated = false,\n                oidTitle;\n\n            // Если тайтл содержит ОИД, пытаемся расшифровать\n            if (/^OID./.test(title)) {\n                oidTitle = title.match(/^OID\\.(.*)/);\n\n                if (oidTitle && oidTitle[1]) {\n                    oidTitle = oids[oidTitle[1]];\n\n                    if (oidTitle) {\n                        title = oidTitle;\n                    }\n                }\n            }\n\n            // Вырезаем лишние кавычки\n            descr = descr.replace(/^\"(.*)\"/, '$1');\n            descr = descr.replace(/\"{2}/g, '\"');\n\n            tags.some(function (tag) {\n                return tag.possibleNames.some(function (possible) {\n                    var match = possible === title;\n\n                    if (match) {\n                        title = tag.translation;\n                        translated = true;\n                    }\n\n                    return match;\n                });\n            });\n\n            return {\n                title: title,\n                descr: descr,\n                translated: translated\n            };\n        });\n    }\n\n    return result;\n}\n\n/**\n * Возвращает дату в формате (dd.mm.yyyy hh:mm:ss) из строки, формата, используемого плагином cryptoPro\n * */\nfunction getReadableDate(date) {\n    date = new Date(date);\n\n    return ([date.getDate(), date.getMonth() + 1, date.getFullYear()].join('.') + ' ' + [date.getHours(), date.getMinutes(), date.getSeconds()].join(':')).replace(/\\b(\\d)\\b/g, '0$1');\n}\n\n/**\n * Преобразует дату для IE\n * */\nfunction getDateObj(dateObj) {\n    return bowser.msie ? dateObj.getVarDate() : dateObj;\n}\n\n/**\n * Подготавливает информацию о сертификатах\n * */\nfunction prepareCertsInfo(items) {\n    return items.map(function (c) {\n        c.name = c.subjectName.match(/CN=(.+?),/);\n\n        // Удалось ли вытащить Common Name\n        if (c.name && c.name[1]) {\n            c.name = c.name[1];\n        }\n\n        c.validFrom = getReadableDate(c.validFrom);\n        c.validTo = getReadableDate(c.validTo);\n\n        c.label = c.name + ' (до ' + c.validTo + ')';\n\n        return c;\n    });\n}\n\n/**\n * Возвращает расшифрованные ОИД'ы\n * */\nfunction getDecodedExtendedKeyUsage() {\n    var that = this;\n\n    return new Promise(function (resolve) {\n        that.getExtendedKeyUsage().then(function (certOids) {\n            resolve(certOids.reduce(function (oidsLst, oid) {\n                oid = {\n                    id: oid,\n                    descr: oids[oid] || null\n                };\n\n                if (oid.descr) {\n                    oidsLst.unshift(oid);\n                } else {\n                    oidsLst.push(oid);\n                }\n\n                return oidsLst;\n            }, []));\n        });\n    });\n}\n\n/**\n * Проверка наличия ОИД'а(ОИД'ов) у сертификата\n *\n * @param {String|Array} oids - ОИД'ы для проверки\n * @returns {Promise} с отложенным результатом типа {Boolean}\n * */\nfunction hasExtendedKeyUsage(oids) {\n    var that = this;\n\n    return new Promise(function (resolve) {\n        that.getExtendedKeyUsage().then(function (certOids) {\n            var result;\n\n            if (Array.isArray(oids)) {\n                result = oids.every(function (oidToCheck) {\n                    return certOids.some(function (certOid) {\n                        return certOid === oidToCheck;\n                    });\n                });\n            } else {\n                result = certOids.some(function (certOid) {\n                    return certOid === oids;\n                });\n            }\n\n            resolve(result);\n        });\n    });\n}\n\n/**\n * Выводит информацию о системе пользователя\n * */\nfunction getEnvInfo() {\n    var parsed = bowser._detect(navigator.userAgent),\n        info = {\n        browserName: parsed.name,\n        browserVersion: parsed.version\n    };\n\n    if (parsed.mac) {\n        info.os = 'Mac';\n    } else if (parsed.windows) {\n        info.os = 'Windows';\n    } else if (parsed.linux) {\n        info.os = 'Linux';\n    }\n\n    return info;\n}\n\n/**\n * Подходящая ли версия CSP\n * */\nfunction isValidCSPVersion(version) {\n    version = version.match(/\\d+?\\b(?:\\.\\d+)?/);\n\n    return version >= 3.6;\n}\n\n/**\n * Подходящая ли версия cades плагина\n * */\nfunction isValidCadesVersion(version) {\n    version = version.split('.').reduce(function (verInfo, number, i) {\n        if (i === 0) {\n            verInfo.major = number;\n        } else if (i === 1) {\n            verInfo.minor = number;\n        } else if (i === 2) {\n            verInfo.patch = number;\n        }\n\n        return verInfo;\n    }, {});\n\n    if (version.major < 2) {\n        return false;\n    }\n\n    return version.patch >= 12438;\n}\n\nmodule.exports = {\n    subjectNameTagsTranslations: subjectNameTagsTranslations,\n    issuerNameTagsTranslations: issuerNameTagsTranslations,\n    parseCertInfo: parseCertInfo,\n    getReadableDate: getReadableDate,\n    getDateObj: getDateObj,\n    prepareCertsInfo: prepareCertsInfo,\n    getDecodedExtendedKeyUsage: getDecodedExtendedKeyUsage,\n    hasExtendedKeyUsage: hasExtendedKeyUsage,\n    getEnvInfo: getEnvInfo,\n    isValidCSPVersion: isValidCSPVersion,\n    isValidCadesVersion: isValidCadesVersion\n};\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n    // CAPICOM_STORE_LOCATION enumeration\n    StoreLocation: {\n        CAPICOM_MEMORY_STORE: 0,\n        CAPICOM_LOCAL_MACHINE_STORE: 1,\n        CAPICOM_CURRENT_USER_STORE: 2,\n        CAPICOM_ACTIVE_DIRECTORY_USER_STORE: 3,\n        CAPICOM_SMART_CARD_USER_STORE: 4\n    },\n    // CAPICOM_STORE_OPEN_MODE enumeration\n    StoreOpenMode: {\n        CAPICOM_STORE_OPEN_READ_ONLY: 0,\n        CAPICOM_STORE_OPEN_READ_WRITE: 1,\n        CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED: 2,\n        CAPICOM_STORE_OPEN_EXISTING_ONLY: 128,\n        CAPICOM_STORE_OPEN_INCLUDE_ARCHIVED: 256\n    },\n    // CAPICOM_CERTIFICATE_FIND_TYPE enumeration\n    CertFindType: {\n        CAPICOM_CERTIFICATE_FIND_SHA1_HASH: 0,\n        CAPICOM_CERTIFICATE_FIND_SUBJECT_NAME: 1,\n        CAPICOM_CERTIFICATE_FIND_ISSUER_NAME: 2,\n        CAPICOM_CERTIFICATE_FIND_ROOT_NAME: 3,\n        CAPICOM_CERTIFICATE_FIND_TEMPLATE_NAME: 4,\n        CAPICOM_CERTIFICATE_FIND_EXTENSION: 5,\n        CAPICOM_CERTIFICATE_FIND_EXTENDED_PROPERTY: 6,\n        CAPICOM_CERTIFICATE_FIND_APPLICATION_POLICY: 7,\n        CAPICOM_CERTIFICATE_FIND_CERTIFICATE_POLICY: 8,\n        CAPICOM_CERTIFICATE_FIND_TIME_VALID: 9,\n        CAPICOM_CERTIFICATE_FIND_TIME_NOT_YET_VALID: 10,\n        CAPICOM_CERTIFICATE_FIND_TIME_EXPIRED: 11,\n        CAPICOM_CERTIFICATE_FIND_KEY_USAGE: 12\n    },\n    Time: {\n        AUTHENTICATED_ATTRIBUTE_SIGNING_TIME: 0\n    },\n    Check: {\n        CHECK_NONE: 0,\n        CHECK_TRUSTED_ROOT: 1,\n        CHECK_TIME_VALIDITY: 2,\n        CHECK_SIGNATURE_VALIDITY: 4,\n        CHECK_ONLINE_REVOCATION_STATUS: 8,\n        CHECK_OFFLINE_REVOCATION_STATUS: 16,\n        TRUST_IS_NOT_TIME_VALID: 1,\n        TRUST_IS_NOT_TIME_NESTED: 2,\n        TRUST_IS_REVOKED: 4,\n        TRUST_IS_NOT_SIGNATURE_VALID: 8,\n        TRUST_IS_NOT_VALID_FOR_USAGE: 16,\n        TRUST_IS_UNTRUSTED_ROOT: 32,\n        TRUST_REVOCATION_STATUS_UNKNOWN: 64,\n        TRUST_IS_CYCLIC: 128,\n        TRUST_IS_PARTIAL_CHAIN: 65536,\n        TRUST_CTL_IS_NOT_TIME_VALID: 131072,\n        TRUST_CTL_IS_NOT_SIGNATURE_VALID: 262144,\n        TRUST_CTL_IS_NOT_VALID_FOR_USAGE: 524288\n    },\n    // CAPICOM_PROPID enumeration\n    PropId: {\n        CAPICOM_PROPID_UNKNOWN: 0,\n        CAPICOM_PROPID_KEY_PROV_HANDLE: 1,\n        CAPICOM_PROPID_KEY_PROV_INFO: 2,\n        CAPICOM_PROPID_SHA1_HASH: 3,\n        CAPICOM_PROPID_HASH_PROP: 3,\n        CAPICOM_PROPID_MD5_HASH: 4,\n        CAPICOM_PROPID_KEY_CONTEXT: 5,\n        CAPICOM_PROPID_KEY_SPEC: 6,\n        CAPICOM_PROPID_IE30_RESERVED: 7,\n        CAPICOM_PROPID_PUBKEY_HASH_RESERVED: 8,\n        CAPICOM_PROPID_ENHKEY_USAGE: 9,\n        CAPICOM_PROPID_CTL_USAGE: 9,\n        CAPICOM_PROPID_NEXT_UPDATE_LOCATION: 10,\n        CAPICOM_PROPID_FRIENDLY_NAME: 11,\n        CAPICOM_PROPID_PVK_FILE: 12,\n        CAPICOM_PROPID_DESCRIPTION: 13,\n        CAPICOM_PROPID_ACCESS_STATE: 14,\n        CAPICOM_PROPID_SIGNATURE_HASH: 15,\n        CAPICOM_PROPID_SMART_CARD_DATA: 16,\n        CAPICOM_PROPID_EFS: 17,\n        CAPICOM_PROPID_FORTEZZA_DATA: 18,\n        CAPICOM_PROPID_ARCHIVED: 19,\n        CAPICOM_PROPID_KEY_IDENTIFIER: 20,\n        CAPICOM_PROPID_AUTO_ENROLL: 21,\n        CAPICOM_PROPID_PUBKEY_ALG_PARA: 22,\n        CAPICOM_PROPID_CROSS_CERT_DIST_POINTS: 23,\n        CAPICOM_PROPID_ISSUER_PUBLIC_KEY_MD5_HASH: 24,\n        CAPICOM_PROPID_SUBJECT_PUBLIC_KEY_MD5_HASH: 25,\n        CAPICOM_PROPID_ENROLLMENT: 26,\n        CAPICOM_PROPID_DATE_STAMP: 27,\n        CAPICOM_PROPID_ISSUER_SERIAL_NUMBER_MD5_HASH: 28,\n        CAPICOM_PROPID_SUBJECT_NAME_MD5_HASH: 29,\n        CAPICOM_PROPID_EXTENDED_ERROR_INFO: 30,\n        CAPICOM_PROPID_RENEWAL: 64,\n        CAPICOM_PROPID_ARCHIVED_KEY_HASH: 65,\n        CAPICOM_PROPID_FIRST_RESERVED: 66,\n        CAPICOM_PROPID_LAST_RESERVED: 0x00007FFF,\n        CAPICOM_PROPID_FIRST_USER: 0x00008000,\n        CAPICOM_PROPID_LAST_USER: 0x0000FFFF\n    },\n    // CADESCOM_XML_SIGNATURE_TYPE enumeration\n    SignatureType: {\n        CADESCOM_XML_SIGNATURE_TYPE_ENVELOPED: 0,\n        CADESCOM_XML_SIGNATURE_TYPE_ENVELOPING: 1,\n        CADESCOM_XML_SIGNATURE_TYPE_TEMPLATE: 2\n    },\n    // CADESCOM_HASH_ALGORITHM enumeration\n    HashAlgorithm: {\n        CADESCOM_HASH_ALGORITHM_CP_GOST_3411: 100,\n        CADESCOM_HASH_ALGORITHM_MD2: 1,\n        CADESCOM_HASH_ALGORITHM_MD4: 2,\n        CADESCOM_HASH_ALGORITHM_MD5: 3,\n        CADESCOM_HASH_ALGORITHM_SHA_256: 4,\n        CADESCOM_HASH_ALGORITHM_SHA_384: 5,\n        CADESCOM_HASH_ALGORITHM_SHA_512: 6,\n        CADESCOM_HASH_ALGORITHM_SHA1: 0\n    },\n    CadesType: {\n        CADESCOM_CADES_DEFAULT: 0,\n        CADESCOM_CADES_BES: 1,\n        CADESCOM_CADES_X_LONG_TYPE_1: 0x5d\n    },\n    ContentEncoding: {\n        CADESCOM_BASE64_TO_BINARY: 0x01,\n        CADESCOM_STRING_TO_UCS2LE: 0x00\n    },\n    StoreNames: {\n        CAPICOM_MY_STORE: 'My'\n    },\n    Chain: {\n        CAPICOM_CERTIFICATE_INCLUDE_CHAIN_EXCEPT_ROOT: 0,\n        CAPICOM_CERTIFICATE_INCLUDE_WHOLE_CHAIN: 1,\n        CAPICOM_CERTIFICATE_INCLUDE_END_ENTITY_ONLY: 2\n    },\n    GostXmlDSigUrls: {\n        XmlDsigGost3410Url: 'urn:ietf:params:xml:ns:cpxmlsec:algorithms:gostr34102001-gostr3411',\n        XmlDsigGost3411Url: 'urn:ietf:params:xml:ns:cpxmlsec:algorithms:gostr3411',\n        XmlDsigGost3410UrlObsolete: 'http://www.w3.org/2001/04/xmldsig-more#gostr34102001-gostr3411',\n        XmlDsigGost3411UrlObsolete: 'http://www.w3.org/2001/04/xmldsig-more#gostr3411'\n    }\n};\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n    '1.2.840.113549.1.9.2': 'Неструктурированное имя',\n    '1.2.643.3.141.1.1': 'РНС ФСС',\n    '1.2.643.3.141.1.2': 'КП ФСС',\n    '1.2.643.3.131.1.1': 'ИНН',\n    '1.3.6.1.5.5.7.3.2': 'Проверка подлинности клиента',\n    '1.3.6.1.5.5.7.3.4': 'Защищенная электронная почта',\n    '1.2.643.3.8.100.1': 'Сертификат типа \"ekey-ГОСТ\"',\n    '1.2.643.3.8.100.1.1': 'Общее использование в системах ИОК без права заверения финансовых документов',\n    '1.2.643.3.8.100.1.2': 'Передача отчетности по ТКС',\n    '1.2.643.3.8.100.1.3': 'Оформление взаимных обязательств, соглашений, договоров, актов и т.п.',\n    '1.2.643.3.8.100.1.4': 'Внутрикорпоративный документооборот',\n    '1.2.643.3.8.100.1.5': 'Использование в системах электронной торговли',\n    '1.2.643.3.8.100.1.6': 'Использование в торгово-закупочной системе \"ЭЛЕКТРА\"',\n    '1.2.643.6.2.1.7.2': 'Использование физическим лицом в отношениях, связанных с возникновением, исполнением (осуществлением) и прекращением гражданских прав и обязанностей в отношении инвестиционных паев паевых инвестиционных фондов, в том числе отношения, связанные с учетом и/или фиксацией прав на инвестиционные паи паевых инвестиционных фондов',\n    '1.2.643.6.2.1.7.1': 'Использование единоличным исполнительным органом юридического лица или уполномоченными представителями юридического лица в отношениях, связанных с возникновением, исполнением (осуществлением) и прекращением гражданских и иных прав и обязанностей в сфере негосударственного пенсионного обеспечения, негосударственного пенсионного страхования, в сфере деятельности паевых инвестиционных фондов, акционерных инвестиционных фондов, профессиональных участников рынка ценных бумаг, а также связанной с обслуживанием указанной деятельности услуг кредитных и иных организаций',\n    '1.3.6.1.4.1.29919.21': 'Использование в системе Портал государственных закупок  Ростовской области \"Рефери\".',\n    '1.2.643.3.2.100.65.13.11': 'Использование в системе АИС \"Госзакупки\" Сахалинской области.',\n    '1.2.643.3.8.100.1.7': 'Использование в системе Портал государственных закупок Ставропольского края.',\n    '1.2.643.3.8.100.1.8': 'Использование в Единой системе электронной торговли B2B-Center и B2G.',\n    '1.2.643.3.8.100.1.9': 'Для участия в электронных торгах и подписания государственного контракта в  электронной площадке ОАО «ЕЭТП» уполномоченными лицами участников размещения  государственного или муниципального заказа',\n    '1.2.643.3.8.100.1.10': 'Для участия в электронных торгах и подписания государственного контракта в  информационных системах Тендерного комитета города Москвы уполномоченными  лицами участников размещения государственного заказа города Москвы',\n    '1.2.643.3.8.100.1.11': 'Подписание электронных документов в автоматизированной информационной  системе размещения государственного и муниципального заказа Саратовской области',\n    '1.2.643.3.8.100.1.12': 'Использование в системе государственного заказа Иркутской области',\n    '1.2.643.3.8.100.1.13': 'Использование в электронной торговой площадке агентства государственного  заказа Красноярского края',\n    '1.3.6.1.4.1.24138.1.1.8.1': 'Обеспечение юридической значимости в Системе \"Электронная Торговая Площадка\"',\n    '1.2.643.3.8.100.1.14': 'Использование в электронной торговой площадке \"Тендер\"',\n    '1.2.643.6.3': 'Использование в электронных торговых системах и в программном обеспечении, связанным с обменом электронных сообщений',\n    '1.2.643.2.2.34.6': 'Пользователь Центра Регистрации',\n    '1.2.643.2.39.1.1': 'Использование в программных продуктах системы \"1С:Предприятие 8\"',\n    '1.2.643.5.1.24.2.1.3': 'Формирование документов для получения государственных  услуг в сфере ведения государственного кадастра недвижимости со стороны заявителя',\n    '1.2.643.5.1.24.2.1.3.1': 'Формирование кадастровым инженером документов  для получения государственных услуг в сфере ведения государственного кадастра недвижимости со стороны  заявителя',\n    '1.2.643.5.1.24.2.2.2': 'Формирование документов как результата оказания  услуги со стороны органов регистрации прав',\n    '1.2.643.5.1.24.2.2.3': 'Формирование документов для получения государственных  услуг в сфере государственной регистрации прав на недвижимое имущество и сделок с ним со стороны заявителя',\n    '1.2.643.6.3.1.1': 'Использование на электронных площадок отобранных для проведения аукционах в электронной форме',\n    '1.2.643.6.3.1.2.1': 'Тип участника - Юридическое лицо',\n    '1.2.643.6.3.1.2.2': 'Тип участника - Физическое лицо',\n    '1.2.643.6.3.1.2.3': 'Тип участника - Индивидуальный предприниматель',\n    '1.2.643.6.3.1.3.1': 'Участник размещения заказа',\n    '1.2.643.6.3.1.4.1': 'Администратор организации',\n    '1.2.643.6.3.1.4.2': 'Уполномоченный специалист',\n    '1.2.643.6.3.1.4.3': 'Специалист с правом подписи контракта',\n    '1.3.643.3.8.100.15': 'Использование в ЭТП \"uTender\"'\n};\n\n/***/ })\n]);\n\n\n// WEBPACK FOOTER //\n// 1.crypto-pro.js","var cryptoCommon = require('./common'),\n    cryptoConstants = require('./constants'),\n    _certListCache;\n\nfunction Certificate(item) {\n    this._cert = item._cert;\n    this.thumbprint = item.thumbprint;\n    this.subjectName = item.subjectName;\n    this.issuerName = item.issuerName;\n    this.validFrom = item.validFrom;\n    this.validTo = item.validTo;\n}\n\n/**\n * Проверяет, валиден ли сертификат\n * */\nCertificate.prototype.isValid = function isValid() {\n    var cert = this._cert;\n\n    return new Promise(function (resolve, reject) {\n        cadesplugin.async_spawn(function* () {\n            var result;\n\n            try {\n                result = yield cert.IsValid();\n                result = yield result.Result;\n            } catch (err) {\n                reject('Ошибка при проверке сертификата: ', err.message);\n                return;\n            }\n\n            resolve(result);\n        });\n    });\n};\n\n/**\n * Достает указанное свойство у сертификата\n * */\nCertificate.prototype.getProp = function (propName) {\n    var cert = this._cert;\n\n    return new Promise(function (resolve, reject) {\n        cadesplugin.async_spawn(function* () {\n            var result;\n\n            try {\n                result = yield cert[propName];\n            } catch (err) {\n                reject('Ошибка при обращении к свойству сертификата: ', err.message);\n                return;\n            }\n\n            resolve(result);\n        });\n    });\n};\n\n/**\n * Экспорт base64 представления сертификата пользователя\n * */\nCertificate.prototype.exportBase64 = function exportBase64() {\n    var cert = this._cert;\n\n    return new Promise(function (resolve, reject) {\n        cadesplugin.async_spawn(function* () {\n            var base64;\n\n            try {\n                base64 = yield cert.Export(0);\n            } catch (err) {\n                reject('Ошибка при экспорте сертификата: ', err.message);\n                return;\n            }\n\n            resolve(base64);\n        });\n    });\n};\n\n/**\n * Возвращает информацию об алгоритме\n * */\nCertificate.prototype.getAlgorithm = function getAlgorithm() {\n    var cert = this._cert;\n\n    return new Promise(function (resolve, reject) {\n        cadesplugin.async_spawn(function* () {\n            var result = {},\n                algorithm;\n\n            try {\n                algorithm = yield cert.PublicKey();\n                algorithm = yield algorithm.Algorithm;\n\n                result.algorithm = yield algorithm.FriendlyName;\n                result.oid = yield algorithm.Value;\n            } catch (err) {\n                reject('Ошибка при получении алгоритма: ', err.message);\n                return;\n            }\n\n            resolve(result);\n        });\n    });\n};\n\n/**\n * Разбирает SubjectName сертификата по тэгам\n * */\nCertificate.prototype.getOwnerInfo = function getOwnerInfo() {\n    return getCertInfo.call(this, cryptoCommon.subjectNameTagsTranslations, 'SubjectName');\n};\n\n/**\n * Разбирает IssuerName сертификата по тэгам\n * */\nCertificate.prototype.getIssuerInfo = function getIssuerInfo() {\n    return getCertInfo.call(this, cryptoCommon.issuerNameTagsTranslations, 'IssuerName');\n};\n\n/**\n * Получение OID сертификата\n *\n * @returns {Array} Возвращает массив OID (улучшенного ключа)\n * */\nCertificate.prototype.getExtendedKeyUsage = function getExtendedKeyUsage() {\n    var cert = this._cert;\n\n    return new Promise(function (resolve, reject) {\n        cadesplugin.async_spawn(function* () {\n            var OIDS = [],\n                count,\n                item;\n\n            try {\n                count = yield cert.ExtendedKeyUsage();\n                count = yield count.EKUs;\n                count = yield count.Count;\n\n                if (count > 0) {\n                    while (count > 0) {\n                        item = yield cert.ExtendedKeyUsage();\n                        item = yield item.EKUs;\n                        item = yield item.Item(count);\n                        item = yield item.OID;\n\n                        OIDS.push(item);\n\n                        count--;\n                    }\n                }\n            } catch (err) {\n                reject('Ошибка при получении ОИД\\'ов: ', err.message);\n                return;\n            }\n\n            resolve(OIDS);\n        });\n    });\n};\n\nCertificate.prototype.getDecodedExtendedKeyUsage = cryptoCommon.getDecodedExtendedKeyUsage;\n\nCertificate.prototype.hasExtendedKeyUsage = cryptoCommon.hasExtendedKeyUsage;\n\n/**\n * Проверяет корректность настроек ЭП на машине\n * */\nfunction isValidEDSSettings() {\n    return new Promise(function (resolve, reject) {\n        cadesplugin.async_spawn(function* () {\n            var result;\n\n            try {\n                result = yield cadesplugin.CreateObjectAsync('CAdESCOM.About');\n            } catch (error) {\n                reject('Настройки ЭП на данной машине не верны');\n            }\n\n            resolve();\n        });\n    });\n}\n\n/**\n * Получить сертификат в формате cades по хэшу\n * */\nfunction getCadesCert(hash) {\n    return new Promise(function (resolve, reject) {\n        cadesplugin.async_spawn(function* () {\n            var oStore = yield cadesplugin.CreateObjectAsync('CAdESCOM.Store'),\n                certs,\n                certCnt,\n                cert;\n\n            if (!oStore) {\n                reject('Не удалось получить доступ к хранилищу сертификатов');\n                return;\n            }\n\n            // Открываем хранилище\n            try {\n                yield oStore.Open(\n                    cadesplugin.CAPICOM_CURRENT_USER_STORE,\n                    cadesplugin.CAPICOM_MY_STORE,\n                    cadesplugin.CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED\n                );\n            } catch (err) {\n                reject('Ошибка при открытии хранилища: ' + err.message);\n                return;\n            }\n\n            // Получаем доступ к сертификатам\n            try {\n                certs = yield oStore.Certificates;\n                certCnt = yield certs.Count;\n            } catch (err) {\n                reject('Ошибка получения списка сертификатов: ' + err.message);\n                return;\n            }\n\n            if (!certCnt) {\n                reject('Нет доступных сертификатов');\n                return;\n            }\n\n            // Получаем сертификат по хэшу\n            try {\n                certs = yield certs.Find(cadesplugin.CAPICOM_CERTIFICATE_FIND_SHA1_HASH, hash);\n\n                if (certs.Count) {\n                    cert = yield certs.Item(1);\n                } else {\n                    throw new Error(hash);\n                }\n            } catch (err) {\n                reject('Не удалось получить сертификат по хэшу: ' + err.message);\n                return;\n            }\n\n            oStore.Close();\n\n            resolve(cert);\n        });\n    });\n}\n\n/**\n * Разбирает информацию сертификата по тэгам\n * */\nfunction getCertInfo(tags, propName) {\n    var cert = this._cert;\n\n    return new Promise(function (resolve, reject) {\n        cadesplugin.async_spawn(function* () {\n            var propInfo;\n\n            try {\n                propInfo = yield cert[propName];\n            } catch (err) {\n                reject('Ошибка при извлечении данных из сертификата: ', err.message);\n                return;\n            }\n\n            resolve(cryptoCommon.parseCertInfo(tags, propInfo));\n        });\n    });\n}\n\n/**\n * Возвращает список сертификатов, доступных в системе\n *\n * @param {Boolean} [resetCache=false] -- нужно ли сбросить кэш списка сертификатов\n * @returns {Promise} -- со списком сертификатов {Array}\n * */\nfunction getCertsList(resetCache) {\n    return new Promise(function (resolve, reject) {\n        if (!resetCache && _certListCache) {\n            resolve(_certListCache);\n            return;\n        }\n\n        cadesplugin.async_spawn(function* () {\n            var oStore = yield cadesplugin.CreateObjectAsync('CAdESCOM.Store'),\n                result = [],\n                certs,\n                count,\n                item;\n\n            // Открываем хранилище\n            try {\n                yield oStore.Open(\n                    cadesplugin.CAPICOM_CURRENT_USER_STORE,\n                    cadesplugin.CAPICOM_MY_STORE,\n                    cadesplugin.CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED\n                );\n            } catch (err) {\n                reject('Ошибка при открытии хранилища: ' + err.message);\n                return;\n            }\n\n            // Получаем доступ к сертификатам\n            try {\n                certs = yield oStore.Certificates;\n\n                if (certs) {\n                    certs = yield certs.Find(cadesplugin.CAPICOM_CERTIFICATE_FIND_TIME_VALID);\n                    /**\n                     * Не рассматриваются сертификаты, в которых отсутствует закрытый ключ\n                     * или не действительны на данный момент\n                     * */\n                    certs = yield certs.Find(\n                        cadesplugin.CAPICOM_CERTIFICATE_FIND_EXTENDED_PROPERTY,\n                        cryptoConstants.PropId.CAPICOM_PROPID_KEY_PROV_INFO\n                    );\n\n                    count = yield certs.Count;\n                }\n            } catch (err) {\n                reject('Ошибка получения списка сертификатов: ' + err.message);\n                return;\n            }\n\n            if (!count) {\n                reject('Нет доступных сертификатов');\n                return;\n            }\n\n            try {\n                while (count) {\n                    item = yield certs.Item(count);\n\n                    result.push(new Certificate({\n                        _cert: yield item,\n                        thumbprint: yield item.Thumbprint,\n                        subjectName: yield item.SubjectName,\n                        issuerName: yield item.IssuerName,\n                        validFrom: yield item.ValidFromDate,\n                        validTo: yield item.ValidToDate\n                    }));\n\n                    count--;\n                }\n            } catch (err) {\n                reject('Ошибка обработки сертификатов: ' + err.message);\n                return;\n            }\n\n            oStore.Close();\n\n            _certListCache = cryptoCommon.prepareCertsInfo(result);\n\n            resolve(_certListCache);\n        });\n    });\n}\n\n/**\n * Получить сертификат по хэшу\n * */\nfunction getCert(hash) {\n    return new Promise(function (resolve, reject) {\n        if (!hash) {\n            reject('Хэш не указан');\n            return;\n        }\n\n        getCertsList().then(function (list) {\n            var foundCert;\n\n            list.some(function (cert) {\n                if (hash === cert.thumbprint) {\n                    foundCert = cert;\n                    return true;\n                }\n            });\n\n            if (foundCert) {\n                resolve(foundCert);\n            } else {\n                reject('Сертификат с хэшем: \"' + hash + '\" не найден');\n            }\n        }, reject);\n    });\n}\n\n/**\n * Создает подпись base64 строки по hash'у сертификата\n *\n * @param {String} hash -- fingerprint (thumbprint) сертификата\n * @param {String} dataBase64 -- строковые данные в формате base64\n * @param {Boolean} signType -- тип подписи открепленная (true) / присоединенная (false) (default: true)\n * @returns {Promise} -- обещание, которое зарезолвится с данными о подписи {String}\n * */\nfunction signData(hash, dataBase64, signType) {\n    signType = typeof signType === 'undefined' ? true : Boolean(signType);\n\n    return new Promise(function (resolve, reject) {\n        getCadesCert(hash).then(function (cert) {\n            cadesplugin.async_spawn(function* () {\n                var clientTime = new Date(),\n                    oAttrs = yield cadesplugin.CreateObjectAsync('CADESCOM.CPAttribute'),\n                    oSignedData = yield cadesplugin.CreateObjectAsync('CAdESCOM.CadesSignedData'),\n                    oSigner = yield cadesplugin.CreateObjectAsync('CAdESCOM.CPSigner'),\n                    attrs,\n                    signature;\n\n                clientTime = cryptoCommon.getDateObj(clientTime);\n\n                try {\n                    yield oAttrs.propset_Name(cryptoConstants.Time.AUTHENTICATED_ATTRIBUTE_SIGNING_TIME);\n                    yield oAttrs.propset_Value(clientTime);\n                } catch (err) {\n                    reject('Ошибка при установке данных подписи: ' + err.message);\n                    return;\n                }\n\n                // Задаем настройки для подписи\n                try {\n                    yield oSigner.propset_Certificate(cert);\n                    attrs = yield oSigner.AuthenticatedAttributes2;\n                    yield attrs.Add(oAttrs);\n                    yield oSignedData.propset_ContentEncoding(cadesplugin.CADESCOM_BASE64_TO_BINARY);\n                    yield oSignedData.propset_Content(dataBase64);\n                    yield oSigner.propset_Options(cadesplugin.CAPICOM_CERTIFICATE_INCLUDE_END_ENTITY_ONLY);\n                } catch (err) {\n                    reject('Не удалось установить настройки для подписи: ' + err.message);\n                    return;\n                }\n\n                try {\n                    signature = yield oSignedData.SignCades(\n                        oSigner,\n                        cadesplugin.CADESCOM_CADES_BES,\n                        signType\n                    );\n                } catch (err) {\n                    reject('Не удалось создать подпись: ' + err.message);\n                    return;\n                }\n\n                resolve(signature);\n            });\n        }, reject);\n    });\n}\n\n/**\n * Создает подпись XML строки по hash'у сертификата\n *\n * @param {String} hash -- fingerprint (thumbprint) сертификата\n * @param {String} dataXML -- данные в формате XML\n * @returns {Promise} -- обещание, которое зарезолвится с данными о подписи {String}\n * */\nfunction signDataXML(hash, dataXML) {\n    return new Promise(function (resolve, reject) {\n        getCadesCert(hash).then(function (cert) {\n            cadesplugin.async_spawn(function* () {\n                var oSigner = yield cadesplugin.CreateObjectAsync('CAdESCOM.CPSigner'),\n                    signerXML = yield cadesplugin.CreateObjectAsync('CAdESCOM.SignedXML'),\n                    cnts = cryptoConstants,\n                    signature;\n\n                // Задаем настройки для подписи\n                try {\n                    yield oSigner.propset_Certificate(cert);\n                    // Добавляем данные для подписи\n                    yield signerXML.propset_Content(dataXML);\n                    // Устанавливаем тип подписи\n                    yield signerXML.propset_SignatureType(cnts.SignatureType.CADESCOM_XML_SIGNATURE_TYPE_ENVELOPED);\n                    // Устанавливаем алгоритм подписи\n                    yield signerXML.propset_SignatureMethod(cnts.GostXmlDSigUrls.XmlDsigGost3410Url);\n                    // Устанавливаем алгоритм хэширования\n                    yield signerXML.propset_DigestMethod(cnts.GostXmlDSigUrls.XmlDsigGost3411Url);\n                } catch (err) {\n                    reject('Не удалось установить настройки для подписи: ' + err.message);\n                    return;\n                }\n\n                try {\n                    signature = yield signerXML.Sign(oSigner);\n                } catch (err) {\n                    reject('Не удалось создать подпись: ' + err.message);\n                    return;\n                }\n\n                resolve(signature);\n            });\n        }, reject);\n    });\n}\n\n/**\n * Возвращает информацию о версии CSP и плагина\n * */\nfunction getSystemInfo() {\n    var sysInfo = cryptoCommon.getEnvInfo();\n\n    return new Promise(function (resolve, reject) {\n        cadesplugin.async_spawn(function* () {\n            var e;\n\n            try {\n                e = yield cadesplugin.CreateObjectAsync('CAdESCOM.About');\n\n                sysInfo.cadesVersion = yield e.PluginVersion;\n                // Возможен вызов в ранних версиях в виде sysInfo.cspVersion = yield e.CSPVersion('', 75);\n                sysInfo.cspVersion = yield e.CSPVersion();\n\n                if (!sysInfo.cadesVersion) {\n                    sysInfo.cadesVersion = yield e.Version;\n                }\n\n                sysInfo.cadesVersion = yield sysInfo.cadesVersion.toString();\n                sysInfo.cspVersion = yield sysInfo.cspVersion.toString();\n\n                resolve(sysInfo);\n            } catch (err) {\n                reject('Ошибка при получении информации о системе: ', err.message);\n            }\n        });\n    });\n}\n\n/**\n * Promise обертка для синхронного вызова проверки версии CSP\n * */\nfunction isValidCSPVersion(version) {\n    return new Promise(function (resolve) {\n        resolve(cryptoCommon.isValidCSPVersion(version));\n    });\n}\n\n/**\n * Promise обертка для синхронного вызова проверки версии плагина\n * */\nfunction isValidCadesVersion(version) {\n    return new Promise(function (resolve) {\n        resolve(cryptoCommon.isValidCadesVersion(version));\n    });\n}\n\nmodule.exports = {\n    isValidEDSSettings: isValidEDSSettings,\n    getCertsList: getCertsList,\n    getCert: getCert,\n    signData: signData,\n    signDataXML: signDataXML,\n    getSystemInfo: getSystemInfo,\n    isValidCSPVersion: isValidCSPVersion,\n    isValidCadesVersion: isValidCadesVersion\n};\n\n\n// WEBPACK FOOTER //\n// ./apiAsync.js","var bowser = require('bowser/bowser');\nvar oids = require('./oids');\n\nvar subjectNameTagsTranslations = [\n        {possibleNames: ['UnstructuredName'], translation: 'Неструктурированное имя'},\n        {possibleNames: ['CN'], translation: 'Владелец'},\n        {possibleNames: ['SN'], translation: 'Фамилия'},\n        {possibleNames: ['G'], translation: 'Имя Отчество'},\n        {possibleNames: ['C'], translation: 'Страна'},\n        {possibleNames: ['S'], translation: 'Регион'},\n        {possibleNames: ['STREET'], translation: 'Адрес'},\n        {possibleNames: ['O'], translation: 'Компания'},\n        {possibleNames: ['OU'], translation: 'Отдел/подразделение'},\n        {possibleNames: ['T'], translation: 'Должность'},\n        {possibleNames: ['ОГРН', 'OGRN'], translation: 'ОГРН'},\n        {possibleNames: ['ОГРНИП', 'OGRNIP'], translation: 'ОГРНИП'},\n        {possibleNames: ['СНИЛС', 'SNILS'], translation: 'СНИЛС'},\n        {possibleNames: ['ИНН', 'INN'], translation: 'ИНН'},\n        {possibleNames: ['E'], translation: 'Email'},\n        {possibleNames: ['L'], translation: 'Город'}\n    ],\n\n    issuerNameTagsTranslations = [\n        {possibleNames: ['UnstructuredName'], translation: 'Неструктурированное имя'},\n        {possibleNames: ['CN'], translation: 'Удостоверяющий центр'},\n        {possibleNames: ['S'], translation: 'Регион'},\n        {possibleNames: ['C'], translation: 'Страна'},\n        {possibleNames: ['STREET'], translation: 'Адрес'},\n        {possibleNames: ['O'], translation: 'Компания'},\n        {possibleNames: ['OU'], translation: 'Тип'},\n        {possibleNames: ['T'], translation: 'Должность'},\n        {possibleNames: ['ОГРН', 'OGRN'], translation: 'ОГРН'},\n        {possibleNames: ['ОГРНИП', 'OGRNIP'], translation: 'ОГРНИП'},\n        {possibleNames: ['СНИЛС', 'SNILS'], translation: 'СНИЛС'},\n        {possibleNames: ['ИНН', 'INN'], translation: 'ИНН'},\n        {possibleNames: ['E'], translation: 'Email'},\n        {possibleNames: ['L'], translation: 'Город'}\n    ];\n\n/**\n * Парсит информацию из строки с информацией о сертификате\n * */\nfunction parseCertInfo(tags, infoString) {\n    /**\n     * Пример входной строки:\n     *\n\n     T=Генеральный директор, UnstructuredName=\"INN=7811514257/KPP=781101001/OGRN=1127847087884\",\n     STREET=\"Крыленко, д.3, лит.Б\", CN=Король Анатолий Евгеньевич, G=Анатолий Евгеньевич, SN=Король,\n     OU=Администрация, O=\"ООО \"\"Аксиома\"\"\", L=Санкт-Петербург, S=78 г. Санкт-Петербург, C=RU, E=korol@sferasro.ru,\n     INN=007811514257, OGRN=1127847087884, SNILS=11617693460\n\n     * */\n    var result = infoString.match(/([а-яА-Яa-zA-Z0-9\\.]+)=(?:(\"[^\"]+?\")|(.+?))(?:,|$)/g);\n\n    if (result) {\n        result = result.map(function (group) {\n            /**\n             * Пример входной строки:\n             *\n\n             UnstructuredName=\"INN=7811514257/KPP=781101001/OGRN=1127847087884\",\n\n             * */\n            var parts = group.match(/^([а-яА-Яa-zA-Z0-9\\.]+)=(.+?),?$/),\n                title = parts && parts[1],\n                descr = parts && parts[2],\n                translated = false,\n                oidTitle;\n\n            // Если тайтл содержит ОИД, пытаемся расшифровать\n            if (/^OID./.test(title)) {\n                oidTitle = title.match(/^OID\\.(.*)/);\n\n                if (oidTitle && oidTitle[1]) {\n                    oidTitle = oids[oidTitle[1]];\n\n                    if (oidTitle) {\n                        title = oidTitle;\n                    }\n                }\n            }\n\n            // Вырезаем лишние кавычки\n            descr = descr.replace(/^\"(.*)\"/, '$1');\n            descr = descr.replace(/\"{2}/g, '\"');\n\n            tags.some(function (tag) {\n                return tag.possibleNames.some(function (possible) {\n                    var match = possible === title;\n\n                    if (match) {\n                        title = tag.translation;\n                        translated = true;\n                    }\n\n                    return match;\n                });\n            });\n\n            return {\n                title: title,\n                descr: descr,\n                translated: translated\n            };\n        });\n    }\n\n    return result;\n}\n\n/**\n * Возвращает дату в формате (dd.mm.yyyy hh:mm:ss) из строки, формата, используемого плагином cryptoPro\n * */\nfunction getReadableDate(date) {\n    date = new Date(date);\n\n    return ([\n        date.getDate(),\n        date.getMonth() + 1,\n        date.getFullYear()\n    ].join('.') + ' ' + [\n        date.getHours(),\n        date.getMinutes(),\n        date.getSeconds()\n    ].join(':')).replace(/\\b(\\d)\\b/g, '0$1');\n}\n\n/**\n * Преобразует дату для IE\n * */\nfunction getDateObj(dateObj) {\n    return bowser.msie ? dateObj.getVarDate() : dateObj;\n}\n\n/**\n * Подготавливает информацию о сертификатах\n * */\nfunction prepareCertsInfo(items) {\n    return items.map(function (c) {\n        c.name = c.subjectName.match(/CN=(.+?),/);\n\n        // Удалось ли вытащить Common Name\n        if (c.name && c.name[1]) {\n            c.name = c.name[1];\n        }\n\n        c.validFrom = getReadableDate(c.validFrom);\n        c.validTo = getReadableDate(c.validTo);\n\n        c.label = c.name + ' (до ' + c.validTo + ')';\n\n        return c;\n    });\n}\n\n/**\n * Возвращает расшифрованные ОИД'ы\n * */\nfunction getDecodedExtendedKeyUsage() {\n    var that = this;\n\n    return new Promise(function (resolve) {\n        that.getExtendedKeyUsage().then(function (certOids) {\n            resolve(certOids.reduce(function (oidsLst, oid) {\n                oid = {\n                    id: oid,\n                    descr: oids[oid] || null\n                };\n\n                if (oid.descr) {\n                    oidsLst.unshift(oid);\n                } else {\n                    oidsLst.push(oid);\n                }\n\n                return oidsLst;\n            }, []));\n        });\n    });\n}\n\n/**\n * Проверка наличия ОИД'а(ОИД'ов) у сертификата\n *\n * @param {String|Array} oids - ОИД'ы для проверки\n * @returns {Promise} с отложенным результатом типа {Boolean}\n * */\nfunction hasExtendedKeyUsage(oids) {\n    var that = this;\n\n    return new Promise(function (resolve) {\n        that.getExtendedKeyUsage().then(function (certOids) {\n            var result;\n\n            if (Array.isArray(oids)) {\n                result = oids.every(function (oidToCheck) {\n                    return certOids.some(function (certOid) {\n                        return certOid === oidToCheck;\n                    });\n                });\n            } else {\n                result = certOids.some(function (certOid) {\n                    return certOid === oids;\n                });\n            }\n\n            resolve(result);\n        });\n    });\n}\n\n/**\n * Выводит информацию о системе пользователя\n * */\nfunction getEnvInfo() {\n    var parsed = bowser._detect(navigator.userAgent),\n        info = {\n            browserName: parsed.name,\n            browserVersion: parsed.version\n        };\n\n    if (parsed.mac) {\n        info.os = 'Mac';\n    } else if (parsed.windows) {\n        info.os = 'Windows';\n    } else if (parsed.linux) {\n        info.os = 'Linux';\n    }\n\n    return info;\n}\n\n/**\n * Подходящая ли версия CSP\n * */\nfunction isValidCSPVersion(version) {\n    version = version.match(/\\d+?\\b(?:\\.\\d+)?/);\n\n    return version >= 3.6;\n}\n\n/**\n * Подходящая ли версия cades плагина\n * */\nfunction isValidCadesVersion(version) {\n    version = version.split('.').reduce(function (verInfo, number, i) {\n        if (i === 0) {\n            verInfo.major = number;\n        } else if (i === 1) {\n            verInfo.minor = number;\n        } else if (i === 2) {\n            verInfo.patch = number;\n        }\n\n        return verInfo;\n    }, {});\n\n    if (version.major < 2) {\n        return false;\n    }\n\n    return version.patch >= 12438;\n}\n\nmodule.exports = {\n    subjectNameTagsTranslations: subjectNameTagsTranslations,\n    issuerNameTagsTranslations: issuerNameTagsTranslations,\n    parseCertInfo: parseCertInfo,\n    getReadableDate: getReadableDate,\n    getDateObj: getDateObj,\n    prepareCertsInfo: prepareCertsInfo,\n    getDecodedExtendedKeyUsage: getDecodedExtendedKeyUsage,\n    hasExtendedKeyUsage: hasExtendedKeyUsage,\n    getEnvInfo: getEnvInfo,\n    isValidCSPVersion: isValidCSPVersion,\n    isValidCadesVersion: isValidCadesVersion\n};\n\n\n// WEBPACK FOOTER //\n// ./common.js","module.exports = {\n    // CAPICOM_STORE_LOCATION enumeration\n    StoreLocation: {\n        CAPICOM_MEMORY_STORE: 0,\n        CAPICOM_LOCAL_MACHINE_STORE: 1,\n        CAPICOM_CURRENT_USER_STORE: 2,\n        CAPICOM_ACTIVE_DIRECTORY_USER_STORE: 3,\n        CAPICOM_SMART_CARD_USER_STORE: 4\n    },\n    // CAPICOM_STORE_OPEN_MODE enumeration\n    StoreOpenMode: {\n        CAPICOM_STORE_OPEN_READ_ONLY: 0,\n        CAPICOM_STORE_OPEN_READ_WRITE: 1,\n        CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED: 2,\n        CAPICOM_STORE_OPEN_EXISTING_ONLY: 128,\n        CAPICOM_STORE_OPEN_INCLUDE_ARCHIVED: 256\n    },\n    // CAPICOM_CERTIFICATE_FIND_TYPE enumeration\n    CertFindType: {\n        CAPICOM_CERTIFICATE_FIND_SHA1_HASH: 0,\n        CAPICOM_CERTIFICATE_FIND_SUBJECT_NAME: 1,\n        CAPICOM_CERTIFICATE_FIND_ISSUER_NAME: 2,\n        CAPICOM_CERTIFICATE_FIND_ROOT_NAME: 3,\n        CAPICOM_CERTIFICATE_FIND_TEMPLATE_NAME: 4,\n        CAPICOM_CERTIFICATE_FIND_EXTENSION: 5,\n        CAPICOM_CERTIFICATE_FIND_EXTENDED_PROPERTY: 6,\n        CAPICOM_CERTIFICATE_FIND_APPLICATION_POLICY: 7,\n        CAPICOM_CERTIFICATE_FIND_CERTIFICATE_POLICY: 8,\n        CAPICOM_CERTIFICATE_FIND_TIME_VALID: 9,\n        CAPICOM_CERTIFICATE_FIND_TIME_NOT_YET_VALID: 10,\n        CAPICOM_CERTIFICATE_FIND_TIME_EXPIRED: 11,\n        CAPICOM_CERTIFICATE_FIND_KEY_USAGE: 12\n    },\n    Time: {\n        AUTHENTICATED_ATTRIBUTE_SIGNING_TIME: 0\n    },\n    Check: {\n        CHECK_NONE: 0,\n        CHECK_TRUSTED_ROOT: 1,\n        CHECK_TIME_VALIDITY: 2,\n        CHECK_SIGNATURE_VALIDITY: 4,\n        CHECK_ONLINE_REVOCATION_STATUS: 8,\n        CHECK_OFFLINE_REVOCATION_STATUS: 16,\n        TRUST_IS_NOT_TIME_VALID: 1,\n        TRUST_IS_NOT_TIME_NESTED: 2,\n        TRUST_IS_REVOKED: 4,\n        TRUST_IS_NOT_SIGNATURE_VALID: 8,\n        TRUST_IS_NOT_VALID_FOR_USAGE: 16,\n        TRUST_IS_UNTRUSTED_ROOT: 32,\n        TRUST_REVOCATION_STATUS_UNKNOWN: 64,\n        TRUST_IS_CYCLIC: 128,\n        TRUST_IS_PARTIAL_CHAIN: 65536,\n        TRUST_CTL_IS_NOT_TIME_VALID: 131072,\n        TRUST_CTL_IS_NOT_SIGNATURE_VALID: 262144,\n        TRUST_CTL_IS_NOT_VALID_FOR_USAGE: 524288,\n    },\n    // CAPICOM_PROPID enumeration\n    PropId: {\n        CAPICOM_PROPID_UNKNOWN: 0,\n        CAPICOM_PROPID_KEY_PROV_HANDLE: 1,\n        CAPICOM_PROPID_KEY_PROV_INFO: 2,\n        CAPICOM_PROPID_SHA1_HASH: 3,\n        CAPICOM_PROPID_HASH_PROP: 3,\n        CAPICOM_PROPID_MD5_HASH: 4,\n        CAPICOM_PROPID_KEY_CONTEXT: 5,\n        CAPICOM_PROPID_KEY_SPEC: 6,\n        CAPICOM_PROPID_IE30_RESERVED: 7,\n        CAPICOM_PROPID_PUBKEY_HASH_RESERVED: 8,\n        CAPICOM_PROPID_ENHKEY_USAGE: 9,\n        CAPICOM_PROPID_CTL_USAGE: 9,\n        CAPICOM_PROPID_NEXT_UPDATE_LOCATION: 10,\n        CAPICOM_PROPID_FRIENDLY_NAME: 11,\n        CAPICOM_PROPID_PVK_FILE: 12,\n        CAPICOM_PROPID_DESCRIPTION: 13,\n        CAPICOM_PROPID_ACCESS_STATE: 14,\n        CAPICOM_PROPID_SIGNATURE_HASH: 15,\n        CAPICOM_PROPID_SMART_CARD_DATA: 16,\n        CAPICOM_PROPID_EFS: 17,\n        CAPICOM_PROPID_FORTEZZA_DATA: 18,\n        CAPICOM_PROPID_ARCHIVED: 19,\n        CAPICOM_PROPID_KEY_IDENTIFIER: 20,\n        CAPICOM_PROPID_AUTO_ENROLL: 21,\n        CAPICOM_PROPID_PUBKEY_ALG_PARA: 22,\n        CAPICOM_PROPID_CROSS_CERT_DIST_POINTS: 23,\n        CAPICOM_PROPID_ISSUER_PUBLIC_KEY_MD5_HASH: 24,\n        CAPICOM_PROPID_SUBJECT_PUBLIC_KEY_MD5_HASH: 25,\n        CAPICOM_PROPID_ENROLLMENT: 26,\n        CAPICOM_PROPID_DATE_STAMP: 27,\n        CAPICOM_PROPID_ISSUER_SERIAL_NUMBER_MD5_HASH: 28,\n        CAPICOM_PROPID_SUBJECT_NAME_MD5_HASH: 29,\n        CAPICOM_PROPID_EXTENDED_ERROR_INFO: 30,\n        CAPICOM_PROPID_RENEWAL: 64,\n        CAPICOM_PROPID_ARCHIVED_KEY_HASH: 65,\n        CAPICOM_PROPID_FIRST_RESERVED: 66,\n        CAPICOM_PROPID_LAST_RESERVED: 0x00007FFF,\n        CAPICOM_PROPID_FIRST_USER: 0x00008000,\n        CAPICOM_PROPID_LAST_USER: 0x0000FFFF\n    },\n    // CADESCOM_XML_SIGNATURE_TYPE enumeration\n    SignatureType: {\n        CADESCOM_XML_SIGNATURE_TYPE_ENVELOPED: 0,\n        CADESCOM_XML_SIGNATURE_TYPE_ENVELOPING: 1,\n        CADESCOM_XML_SIGNATURE_TYPE_TEMPLATE: 2\n    },\n    // CADESCOM_HASH_ALGORITHM enumeration\n    HashAlgorithm: {\n        CADESCOM_HASH_ALGORITHM_CP_GOST_3411: 100,\n        CADESCOM_HASH_ALGORITHM_MD2: 1,\n        CADESCOM_HASH_ALGORITHM_MD4: 2,\n        CADESCOM_HASH_ALGORITHM_MD5: 3,\n        CADESCOM_HASH_ALGORITHM_SHA_256: 4,\n        CADESCOM_HASH_ALGORITHM_SHA_384: 5,\n        CADESCOM_HASH_ALGORITHM_SHA_512: 6,\n        CADESCOM_HASH_ALGORITHM_SHA1: 0\n    },\n    CadesType: {\n        CADESCOM_CADES_DEFAULT: 0,\n        CADESCOM_CADES_BES: 1,\n        CADESCOM_CADES_X_LONG_TYPE_1: 0x5d\n    },\n    ContentEncoding: {\n        CADESCOM_BASE64_TO_BINARY: 0x01,\n        CADESCOM_STRING_TO_UCS2LE: 0x00\n    },\n    StoreNames: {\n        CAPICOM_MY_STORE: 'My'\n    },\n    Chain: {\n        CAPICOM_CERTIFICATE_INCLUDE_CHAIN_EXCEPT_ROOT: 0,\n        CAPICOM_CERTIFICATE_INCLUDE_WHOLE_CHAIN: 1,\n        CAPICOM_CERTIFICATE_INCLUDE_END_ENTITY_ONLY: 2\n    },\n    GostXmlDSigUrls: {\n        XmlDsigGost3410Url: 'urn:ietf:params:xml:ns:cpxmlsec:algorithms:gostr34102001-gostr3411',\n        XmlDsigGost3411Url: 'urn:ietf:params:xml:ns:cpxmlsec:algorithms:gostr3411',\n        XmlDsigGost3410UrlObsolete: 'http://www.w3.org/2001/04/xmldsig-more#gostr34102001-gostr3411',\n        XmlDsigGost3411UrlObsolete: 'http://www.w3.org/2001/04/xmldsig-more#gostr3411'\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./constants.js","module.exports = {\n    '1.2.840.113549.1.9.2': 'Неструктурированное имя',\n    '1.2.643.3.141.1.1': 'РНС ФСС',\n    '1.2.643.3.141.1.2': 'КП ФСС',\n    '1.2.643.3.131.1.1': 'ИНН',\n    '1.3.6.1.5.5.7.3.2': 'Проверка подлинности клиента',\n    '1.3.6.1.5.5.7.3.4': 'Защищенная электронная почта',\n    '1.2.643.3.8.100.1': 'Сертификат типа \"ekey-ГОСТ\"',\n    '1.2.643.3.8.100.1.1': 'Общее использование в системах ИОК без права заверения финансовых документов',\n    '1.2.643.3.8.100.1.2': 'Передача отчетности по ТКС',\n    '1.2.643.3.8.100.1.3': 'Оформление взаимных обязательств, соглашений, договоров, актов и т.п.',\n    '1.2.643.3.8.100.1.4': 'Внутрикорпоративный документооборот',\n    '1.2.643.3.8.100.1.5': 'Использование в системах электронной торговли',\n    '1.2.643.3.8.100.1.6': 'Использование в торгово-закупочной системе \"ЭЛЕКТРА\"',\n    '1.2.643.6.2.1.7.2': 'Использование физическим лицом в отношениях, связанных с возникновением, исполнением (осуществлением) и прекращением гражданских прав и обязанностей в отношении инвестиционных паев паевых инвестиционных фондов, в том числе отношения, связанные с учетом и/или фиксацией прав на инвестиционные паи паевых инвестиционных фондов',\n    '1.2.643.6.2.1.7.1': 'Использование единоличным исполнительным органом юридического лица или уполномоченными представителями юридического лица в отношениях, связанных с возникновением, исполнением (осуществлением) и прекращением гражданских и иных прав и обязанностей в сфере негосударственного пенсионного обеспечения, негосударственного пенсионного страхования, в сфере деятельности паевых инвестиционных фондов, акционерных инвестиционных фондов, профессиональных участников рынка ценных бумаг, а также связанной с обслуживанием указанной деятельности услуг кредитных и иных организаций',\n    '1.3.6.1.4.1.29919.21': 'Использование в системе Портал государственных закупок  Ростовской области \"Рефери\".',\n    '1.2.643.3.2.100.65.13.11': 'Использование в системе АИС \"Госзакупки\" Сахалинской области.',\n    '1.2.643.3.8.100.1.7': 'Использование в системе Портал государственных закупок Ставропольского края.',\n    '1.2.643.3.8.100.1.8': 'Использование в Единой системе электронной торговли B2B-Center и B2G.',\n    '1.2.643.3.8.100.1.9': 'Для участия в электронных торгах и подписания государственного контракта в  электронной площадке ОАО «ЕЭТП» уполномоченными лицами участников размещения  государственного или муниципального заказа',\n    '1.2.643.3.8.100.1.10': 'Для участия в электронных торгах и подписания государственного контракта в  информационных системах Тендерного комитета города Москвы уполномоченными  лицами участников размещения государственного заказа города Москвы',\n    '1.2.643.3.8.100.1.11': 'Подписание электронных документов в автоматизированной информационной  системе размещения государственного и муниципального заказа Саратовской области',\n    '1.2.643.3.8.100.1.12': 'Использование в системе государственного заказа Иркутской области',\n    '1.2.643.3.8.100.1.13': 'Использование в электронной торговой площадке агентства государственного  заказа Красноярского края',\n    '1.3.6.1.4.1.24138.1.1.8.1': 'Обеспечение юридической значимости в Системе \"Электронная Торговая Площадка\"',\n    '1.2.643.3.8.100.1.14': 'Использование в электронной торговой площадке \"Тендер\"',\n    '1.2.643.6.3': 'Использование в электронных торговых системах и в программном обеспечении, связанным с обменом электронных сообщений',\n    '1.2.643.2.2.34.6': 'Пользователь Центра Регистрации',\n    '1.2.643.2.39.1.1': 'Использование в программных продуктах системы \"1С:Предприятие 8\"',\n    '1.2.643.5.1.24.2.1.3': 'Формирование документов для получения государственных  услуг в сфере ведения государственного кадастра недвижимости со стороны заявителя',\n    '1.2.643.5.1.24.2.1.3.1': 'Формирование кадастровым инженером документов  для получения государственных услуг в сфере ведения государственного кадастра недвижимости со стороны  заявителя',\n    '1.2.643.5.1.24.2.2.2': 'Формирование документов как результата оказания  услуги со стороны органов регистрации прав',\n    '1.2.643.5.1.24.2.2.3': 'Формирование документов для получения государственных  услуг в сфере государственной регистрации прав на недвижимое имущество и сделок с ним со стороны заявителя',\n    '1.2.643.6.3.1.1': 'Использование на электронных площадок отобранных для проведения аукционах в электронной форме',\n    '1.2.643.6.3.1.2.1': 'Тип участника - Юридическое лицо',\n    '1.2.643.6.3.1.2.2': 'Тип участника - Физическое лицо',\n    '1.2.643.6.3.1.2.3': 'Тип участника - Индивидуальный предприниматель',\n    '1.2.643.6.3.1.3.1': 'Участник размещения заказа',\n    '1.2.643.6.3.1.4.1': 'Администратор организации',\n    '1.2.643.6.3.1.4.2': 'Уполномоченный специалист',\n    '1.2.643.6.3.1.4.3': 'Специалист с правом подписи контракта',\n    '1.3.643.3.8.100.15': 'Использование в ЭТП \"uTender\"'\n};\n\n\n// WEBPACK FOOTER //\n// ./oids.js"],"sourceRoot":""}